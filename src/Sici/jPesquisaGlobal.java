/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jPesquisaGlobal.java
 *
 * Created on 03/02/2011, 10:00:00
 */

package Sici;

import Funcoes.*;
import Sici.Locatarios.jLocatarios;
import java.awt.AWTKeyStroke;
import java.awt.Dimension;
import java.awt.KeyboardFocusManager;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashSet;

/**
 *
 * @author supervisor
 */
public class jPesquisaGlobal extends javax.swing.JDialog {
    DbMain conn = VariaveisGlobais.conexao;

    /** Creates new form jPesquisaGlobal */
    public jPesquisaGlobal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

        //Centraliza a janela.
        Dimension dimension = this.getToolkit().getScreenSize();
        int x = (int) (dimension.getWidth() - this.getSize().getWidth() ) / 2;
        int y = (int) (dimension.getHeight() - this.getSize().getHeight()) / 2;
        this.setLocation(x,y);

        // Colocando enter para pular de campo
        HashSet conj = new HashSet(this.getFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS));
        conj.add(AWTKeyStroke.getAWTKeyStroke(KeyEvent.VK_ENTER, 0));
        this.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERSAL_KEYS, conj);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpPesquisa = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtbBuscas = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jrbProp = new javax.swing.JRadioButton();
        jrbLoca = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jBuscar = new javax.swing.JTextField();
        jbtBuscar = new javax.swing.JButton();
        jrbImoveis = new javax.swing.JRadioButton();
        jrbFiadores = new javax.swing.JRadioButton();
        jcbHeuristica = new javax.swing.JCheckBox();
        jInativos = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:: Pesquisa Global ::.");
        setAlwaysOnTop(true);
        setIconImage(null);
        setResizable(false);

        jtbBuscas.setAutoCreateRowSorter(true);
        jtbBuscas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbBuscas.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtbBuscas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtbBuscas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtbBuscasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtbBuscas);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar em:"));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N

        grpPesquisa.add(jrbProp);
        jrbProp.setSelected(true);
        jrbProp.setText("Proprietários");
        jrbProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbPropActionPerformed(evt);
            }
        });

        grpPesquisa.add(jrbLoca);
        jrbLoca.setText("Locatários");
        jrbLoca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbLocaActionPerformed(evt);
            }
        });

        jLabel1.setText("Buscar:");

        jbtBuscar.setFont(new java.awt.Font("Tahoma", 0, 8)); // NOI18N
        jbtBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Figuras/find.png"))); // NOI18N
        jbtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtBuscarActionPerformed(evt);
            }
        });

        grpPesquisa.add(jrbImoveis);
        jrbImoveis.setText("Imóveis");
        jrbImoveis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbImoveisActionPerformed(evt);
            }
        });

        grpPesquisa.add(jrbFiadores);
        jrbFiadores.setText("Fiadores");
        jrbFiadores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jrbFiadoresActionPerformed(evt);
            }
        });

        jcbHeuristica.setSelected(true);
        jcbHeuristica.setText("Busca Heuristica");

        jInativos.setText("Inativos");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jrbProp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jrbLoca)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbImoveis)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jrbFiadores)
                        .addGap(99, 99, 99))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jbtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(jInativos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(18, 18, 18)
                            .addComponent(jcbHeuristica, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcbHeuristica)
                    .addComponent(jInativos))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jrbProp)
                    .addComponent(jrbLoca)
                    .addComponent(jrbImoveis)
                    .addComponent(jrbFiadores))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jbtBuscar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jrbPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbPropActionPerformed
        TableControl.header(jtbBuscas, new String[][] {{"rgprp", "nome", "telefone", "cpf/cnpj", "endereço de correspondência"},{"80","500","120","150","500"}});
        jBuscar.requestFocus();
    }//GEN-LAST:event_jrbPropActionPerformed

    private void jbtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtBuscarActionPerformed
        String[] gbProp = {"p.rgprp", "p.nome", "p.tel", "p.cpfcnpj", "p.cor_end"};
        String[] gbLoca = {"l.contrato", "l.rgimv", "l.cpfcnpj", "l.nomerazao", "l.end", "l.cor_end"};
        String[] gbImvl = {"i.rgprp", "i.rgimv", "i.end", "i.num", "i.compl"};
        String[] gbFiad = {"f.nomerazao", "f.contrato", "f.rgimv", "f.cpfcnpj"};
        String cSql = "";
        String sBusca = jBuscar.getText().trim().toLowerCase();

         if (jrbProp.isSelected()) {
            String sInativos = "";
            if (!jInativos.isSelected()) {
                sInativos = "(Lower(Trim(p.status)) = 'ativo') AND (";
                VariaveisGlobais.IProp = false;
            } else { 
                sInativos = "(Lower(Trim(p.status)) <> 'ativo') AND (";
                VariaveisGlobais.IProp = true; 
            }
            String jgbProp = FuncoesGlobais.join(gbProp, ",");
            cSql =  "SELECT " + jgbProp + " FROM proprietarios p WHERE " + sInativos + gbProp[0].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbProp[1].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " + gbProp[2].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbProp[3].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " + gbProp[4].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%')";

            TableControl.header(jtbBuscas, new String[][] {{"rgprp", "nome", "telefone", "cpf/cnpj", "endereço de correspondência"},{"80","500","120","150","500"}});
            ResultSet pResult = this.conn.AbrirTabela(cSql, ResultSet.CONCUR_READ_ONLY);
            try {
                while (pResult.next()) {
                    String trgprp = String.valueOf(pResult.getInt("p.rgprp"));
                    String tnome = pResult.getString("p.nome").toUpperCase();
                    String ttel = pResult.getString("p.tel").trim();
                    String tcpfcnpj = pResult.getString("p.cpfcnpj");
                    String tend = pResult.getString("p.cor_end");
                    TableControl.add(jtbBuscas, new String[][]{{trgprp, tnome, ttel, tcpfcnpj, tend},{"C","L","C","C","L"}},true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(pResult);

        } else if (jrbLoca.isSelected()) {
            String sInativos = "";
            if (!jInativos.isSelected()) {
                sInativos = "(l.fiador1uf <> 'X' OR IsNull(l.fiador1uf)) AND (";
                VariaveisGlobais.Iloca = false;
            } else { 
                sInativos = "(l.fiador1uf = 'X') AND (";
                VariaveisGlobais.Iloca = true; 
            }
            cSql = "SELECT " + FuncoesGlobais.join(gbLoca,",") + " FROM locatarios l WHERE " + sInativos + gbLoca[0].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbLoca[1].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " + gbLoca[2].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbLoca[3].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " + gbLoca[4].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbLoca[5].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%')";

            TableControl.header(jtbBuscas, new String[][] {{"contrato", "rgimv", "cpf/cnpj", "nome", "endereço", "endereço de correspondência"},{"80","80","150","500","500","500"}});
            ResultSet pResult = this.conn.AbrirTabela(cSql, ResultSet.CONCUR_READ_ONLY);
            try {
                while (pResult.next()) {
                    String tcontrato = String.valueOf(pResult.getInt("l.contrato"));
                    String trgimv = String.valueOf(pResult.getInt("l.rgimv"));
                    String tcpfcnpj = pResult.getString("l.cpfcnpj");
                    String tnome = pResult.getString("l.nomerazao").toUpperCase();
                    String tend = pResult.getString("l.end").toUpperCase().trim();
                    String tendcor = pResult.getString("l.cor_end").toUpperCase().trim();
                    TableControl.add(jtbBuscas, new String[][]{{tcontrato, trgimv, tcpfcnpj, tnome, tend, tendcor},{"C","C","C","L","L","L"}},true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(pResult);

        } else if (jrbImoveis.isSelected()) {
            cSql = "SELECT " + FuncoesGlobais.join(gbImvl,",") + " FROM imoveis i WHERE " + gbImvl[0].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " +
                    gbImvl[1].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%' OR " + gbImvl[2].toLowerCase() + (jcbHeuristica.isSelected() ? " LIKE '%" : " LIKE '") + sBusca + "%'";

            TableControl.header(jtbBuscas, new String[][] {{"rgprp", "rgimv", "endereço"},{"80","80","500"}});
            ResultSet pResult = this.conn.AbrirTabela(cSql, ResultSet.CONCUR_READ_ONLY);
            try {
                while (pResult.next()) {
                    String trgprp = String.valueOf(pResult.getInt("i.rgprp"));
                    String trgimv = String.valueOf(pResult.getInt("i.rgimv"));
                    String tend = pResult.getString("i.end").toUpperCase().trim() + ", " + pResult.getString("i.num").toUpperCase().trim() + " " + pResult.getString("i.compl").toUpperCase().trim();
                    TableControl.add(jtbBuscas, new String[][]{{trgprp, trgimv, tend},{"C","C","L"}},true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(pResult);

        } else {
            cSql = "SELECT " + FuncoesGlobais.join(gbFiad,",") + " FROM fiadores f WHERE Lower(" + gbFiad[0].toLowerCase() + (jcbHeuristica.isSelected() ? ") LIKE '%" : ") LIKE '") + sBusca + "%' OR Lower(" +
                    gbFiad[1].toLowerCase() + (jcbHeuristica.isSelected() ? ") LIKE '%" : ") LIKE '") + sBusca + "%' OR Lower(" + gbFiad[2].toLowerCase() + (jcbHeuristica.isSelected() ? ") LIKE '%" : ") LIKE '") + sBusca +
                    "%' OR Lower(" + gbFiad[3].toLowerCase() + (jcbHeuristica.isSelected() ? ") LIKE '%" : ") LIKE '") + sBusca + "%'";

            TableControl.header(jtbBuscas, new String[][] {{"contrato", "rgimv", "nome", "cpf/cnpj"},{"80","80","500","150"}});
            ResultSet pResult = this.conn.AbrirTabela(cSql, ResultSet.CONCUR_READ_ONLY);
            try {
                while (pResult.next()) {
                    String tcontrato = String.valueOf(pResult.getInt("f.contrato"));
                    String trgimv = String.valueOf(pResult.getInt("f.rgimv"));
                    String tnome = pResult.getString("f.nomerazao").toUpperCase().trim();
                    String tcpfcnpj = pResult.getString("f.cpfcnpj").toUpperCase().trim();
                    TableControl.add(jtbBuscas, new String[][]{{tcontrato, trgimv, tnome, tcpfcnpj},{"C","C","L","C"}},true);
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
            DbMain.FecharTabela(pResult);

        }
    }//GEN-LAST:event_jbtBuscarActionPerformed

    private void jrbLocaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbLocaActionPerformed
        TableControl.header(jtbBuscas, new String[][] {{"contrato", "rgimv", "cpf/cnpj", "nome", "endereço", "endereço de correspondência"},{"80","80","150","500","500","500"}});
        jBuscar.requestFocus();
    }//GEN-LAST:event_jrbLocaActionPerformed

    private void jrbImoveisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbImoveisActionPerformed
        TableControl.header(jtbBuscas, new String[][] {{"rgprp", "rgimv", "endereço"},{"80","80","500"}});
        jBuscar.requestFocus();
    }//GEN-LAST:event_jrbImoveisActionPerformed

    private void jrbFiadoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jrbFiadoresActionPerformed
        TableControl.header(jtbBuscas, new String[][] {{"contrato", "rgimv", "nome", "cpf/cnpj"},{"80","80","500","150"}});
        jBuscar.requestFocus();
    }//GEN-LAST:event_jrbFiadoresActionPerformed

    private void jtbBuscasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtbBuscasMouseClicked
        if (evt.getClickCount() == 2) {
            int selRow = jtbBuscas.getSelectedRow();
            Object valor = null;
            if (selRow > -1) valor = jtbBuscas.getModel().getValueAt(selRow, 0);
            if (jrbProp.isSelected() || jrbImoveis.isSelected()) {
                try {
                    if (VariaveisGlobais.oProp != null) VariaveisGlobais.oProp.dispose();
                    VariaveisGlobais.oProp = new jProprietarios();
                    VariaveisGlobais.oProp.MoveToProp("rgprp", valor.toString());
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                VariaveisGlobais.jPanePrin.add(VariaveisGlobais.oProp);
                CentralizaTela.setCentro(VariaveisGlobais.oProp, VariaveisGlobais.jPanePrin, 0, 0);
            } else if (jrbLoca.isSelected() || jrbFiadores.isSelected()) {
                try {
                    if (VariaveisGlobais.oLoca != null) VariaveisGlobais.oLoca.dispose();
                    VariaveisGlobais.oLoca = new jLocatarios();
                    VariaveisGlobais.oLoca.MoveToLoca("contrato", valor.toString());
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
                VariaveisGlobais.jPanePrin.add(VariaveisGlobais.oLoca);
                CentralizaTela.setCentro(VariaveisGlobais.oLoca, VariaveisGlobais.jPanePrin, 0, 0);
            }

            this.dispose();
        }
    }//GEN-LAST:event_jtbBuscasMouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                jPesquisaGlobal dialog = new jPesquisaGlobal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup grpPesquisa;
    private javax.swing.JTextField jBuscar;
    private javax.swing.JCheckBox jInativos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtBuscar;
    private javax.swing.JCheckBox jcbHeuristica;
    private javax.swing.JRadioButton jrbFiadores;
    private javax.swing.JRadioButton jrbImoveis;
    private javax.swing.JRadioButton jrbLoca;
    private javax.swing.JRadioButton jrbProp;
    private javax.swing.JTable jtbBuscas;
    // End of variables declaration//GEN-END:variables

}
