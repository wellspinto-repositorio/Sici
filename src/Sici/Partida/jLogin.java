/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jLogin.java
 *
 * Created on 02/02/2012, 10:21:22
 */
package Sici.Partida;

import Funcoes.BackGroundDeskTopPane;
import Funcoes.Dates;
import Funcoes.DbMain;
import Funcoes.VariaveisGlobais;
import com.sun.jna.examples.WindowUtils;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.geom.RoundRectangle2D;
import java.sql.ResultSet;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.ERROR_MESSAGE;

/**
 *
 * @author supervisor
 */
public class jLogin extends javax.swing.JDialog {
    private int LOGINDIALOGWIDTH = 359;
    private int LOGINDIALOGHEIGHT = 292;
    private Toolkit tk;
    DbMain conn = null;
    
    /** Creates new form jLogin
     * @param parent
     * @param modal */
    public jLogin(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Redesenha();
        
        // background
        ImageIcon icone = new ImageIcon("login.jpg");
        setIconImage(icone.getImage());
     
        setLocationRelativeTo(null);

        // Unidades de acesso remoto
        for (int w=0;w<VariaveisGlobais.unidades.length;w++) {
            jUnidade.addItem(VariaveisGlobais.unidades[w][0].toString());
        }
        jUnidade.addItem("");

        StartLogin();
                
    }

    private void Redesenha() {
        tk = Toolkit.getDefaultToolkit();
        Dimension screenDim = tk.getScreenSize();
        int ScrWidth = screenDim.width;
        int ScrHeight = screenDim.height - 0;

        this.setBounds((ScrWidth-LOGINDIALOGWIDTH)/2, (ScrHeight-LOGINDIALOGHEIGHT)/2,
                        LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT);
        this.setSize(new Dimension(LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT));
        this.setPreferredSize(new Dimension(LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT));
        this.setMaximumSize(new Dimension(LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT));
        this.setMinimumSize(new Dimension(LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT));

        this.setAlwaysOnTop(true);
        if (VariaveisGlobais.miscelaneas) {
            this.setaOpacity(0.8f);
            this.setRoundRecangle();
        }
        this.pack();        
    }
    
	public boolean setaOpacity(float alpha) {
		if (WindowUtils.isWindowAlphaSupported()) {
			WindowUtils.setWindowAlpha(this, alpha);
			return true;
		} else {
			System.out.println("Sorry, WindowAlpha is not Supported");
			return false;
		}
	}
	public boolean setRoundRecangle(){
		//RoundRectangle2D.Float mask =
		//	new RoundRectangle2D.Float(0, 0,
		//			LOGINDIALOGWIDTH, LOGINDIALOGHEIGHT , 60, 60); 
	    //WindowUtils.setWindowMask(this, mask);
	    return false;
	}

    private void StartLogin() {
        jUnidade.setVisible(true);
        jUnidade.setEnabled(true);
        jUsuario.setText("");
        jUsuario.setEnabled(false);
        jSenha.setText("");
        jSenha.setEnabled(false);
        
        jStatus.setVisible(false);
        jUnidade.requestFocus();        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new BackGroundDeskTopPane("/Figuras/senha.png");
        jUnidade = new javax.swing.JComboBox();
        jUsuario = new javax.swing.JTextField();
        jSenha = new javax.swing.JPasswordField();
        jStatus = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(".:: SICI - Sistema Integrado para Controle de Imobiliárias");
        setAlwaysOnTop(true);
        setModal(true);
        setUndecorated(true);
        setResizable(false);

        jUnidade.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        jUnidade.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jUnidadeKeyPressed(evt);
            }
        });
        jDesktopPane1.add(jUnidade);
        jUnidade.setBounds(140, 190, 150, 22);

        jUsuario.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        jUsuario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jUsuario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jUsuarioKeyPressed(evt);
            }
        });
        jDesktopPane1.add(jUsuario);
        jUsuario.setBounds(140, 210, 150, 22);

        jSenha.setFont(new java.awt.Font("SansSerif", 1, 10)); // NOI18N
        jSenha.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSenhaActionPerformed(evt);
            }
        });
        jSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSenhaKeyPressed(evt);
            }
        });
        jDesktopPane1.add(jSenha);
        jSenha.setBounds(140, 230, 150, 22);

        jStatus.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jStatus.setForeground(new java.awt.Color(255, 0, 0));
        jDesktopPane1.add(jStatus);
        jStatus.setBounds(140, 260, 150, 22);

        jLabel1.setFont(new java.awt.Font("Ubuntu", 3, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(254, 254, 254));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Chave de Acesso:");
        jDesktopPane1.add(jLabel1);
        jLabel1.setBounds(20, 230, 110, 20);

        jLabel2.setFont(new java.awt.Font("Ubuntu", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(254, 254, 254));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Estação:");
        jDesktopPane1.add(jLabel2);
        jLabel2.setBounds(20, 190, 110, 20);

        jLabel3.setFont(new java.awt.Font("Ubuntu", 3, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(254, 254, 254));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("Utilizador:");
        jDesktopPane1.add(jLabel3);
        jLabel3.setBounds(20, 210, 110, 20);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jUnidadeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jUnidadeKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) { 
            int _pos = jUnidade.getSelectedIndex();
            if (_pos > -1) {
                if (!VariaveisGlobais.unidades[_pos][0].toString().trim().equals("")) VariaveisGlobais.unidade = VariaveisGlobais.unidades[_pos][0].toString();
                if (!VariaveisGlobais.unidades[_pos][1].toString().trim().equals("")) VariaveisGlobais.dbnome = VariaveisGlobais.unidades[_pos][1].toString();
                if (!VariaveisGlobais.unidades[_pos][2].toString().trim().equals("")) VariaveisGlobais.dbsenha = (Boolean)VariaveisGlobais.unidades[_pos][2];

                System.out.println(VariaveisGlobais.unidade + "\n" + VariaveisGlobais.dbnome + "\n" + VariaveisGlobais.dbsenha);
                conn = new DbMain(VariaveisGlobais.unidade,"root",(VariaveisGlobais.dbsenha ? VariaveisGlobais.passwd : ""),VariaveisGlobais.dbnome);
              
                VariaveisGlobais.conexao = conn;
                if (conn.conn != null) {
                    jStatus.setText("");
                    jUsuario.setText("");
                    jSenha.setText("");
                    jUsuario.setEnabled(true);
                    jSenha.setEnabled(true);

                    jStatus.setVisible(false);
                    jUsuario.requestFocus();
                } else {
                    jStatus.setText("Unidade não encontrada ou fora do ar!!!");
                    jStatus.setVisible(true);
                }
            } else {
                jStatus.setText("Erro no arquivo .conf!!!");
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) { 
            this.dispose();
            System.exit(0);
        }        
    }//GEN-LAST:event_jUnidadeKeyPressed

    private void jUsuarioKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jUsuarioKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) { 
            jSenha.setText("");
            jSenha.requestFocus();
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) { 
            this.dispose();
            System.exit(0);
        }        
    }//GEN-LAST:event_jUsuarioKeyPressed

    private void jSenhaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSenhaKeyPressed
        if (evt.getKeyCode()==KeyEvent.VK_ENTER) { 
            // Aqui checa se o usuario é valido
            try {
                String mfuncao = "", mnome = "", mcpf = "", mprotocolo = "";
                ResultSet rs = conn.AbrirTabela("SELECT usuario, senha, f_funcao, f_nome, f_cpf, atalhos FROM cadfun WHERE usuario = '" + jUsuario.getText().trim() + "' AND senha = '" + jSenha.getText().trim() + "';", WIDTH);
                if (rs.next()) {
                    jStatus.setText("");
                    mfuncao = rs.getString("f_funcao");
                    mnome = rs.getString("f_nome");
                    mcpf = rs.getString("f_cpf");
                    mprotocolo = rs.getString("atalhos").trim();
                } else {
                    jStatus.setText("Usuário ou Senha invalido!!!");
                    jUsuario.setText("");
                    jSenha.setText("");
                    jUsuario.requestFocus();
                    return;
                }
                
                VariaveisGlobais.usuario = jUsuario.getText().toLowerCase().trim();
                VariaveisGlobais.senha = jSenha.getText().toLowerCase().trim();
                VariaveisGlobais.funcao = mfuncao.toLowerCase().trim();
                VariaveisGlobais.protocolomenu = mprotocolo;
                
                DbMain.FecharTabela(rs);
                
                // Aqui checa se esta tentando retoragir data
                
                if (ChecaData()) {
                    this.dispose();
                
                    // Grava nova data de Partida
                    conn.GravarParametros(new String[] {"PARTIDA",Dates.DateFormata("dd-MM-yyyy", new Date()),"TEXTO"});
                    
                    NewMenu.main(new String[] {""});
                } else {
                    JOptionPane.showMessageDialog(jSenha, "A Data não pode ser retroativa...", "Atenção!!!", ERROR_MESSAGE);
                }
            } catch (Exception e) {
                jStatus.setText("Unidade não encontrada ou fora do ar!!!");
                e.printStackTrace();
            }
        }
        if (evt.getKeyCode()==KeyEvent.VK_ESCAPE) { 
            this.dispose();
            System.exit(0);
        }        
    }//GEN-LAST:event_jSenhaKeyPressed

    private boolean ChecaData() {
        String tmpData = null;
        try {
            tmpData = conn.LerParametros("PARTIDA");
        } catch (Exception e) {}
        if (tmpData == null) return true;
        
        Date sData = Dates.StringtoDate(tmpData, "dd-MM-yyyy");
        Date tData = new Date();
        
        int nDias = Dates.DateDiff(Dates.DIA, sData, tData);
        
        return (nDias < 0 ? false : true);
    }
    
    private void jSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSenhaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jSenhaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                jLogin dialog = new jLogin(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jSenha;
    private javax.swing.JTextField jStatus;
    private javax.swing.JComboBox jUnidade;
    private javax.swing.JTextField jUsuario;
    // End of variables declaration//GEN-END:variables
}