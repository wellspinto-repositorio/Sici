/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jViewDoctos.java
 *
 * Created on 17/02/2012, 09:51:55
 */
package Movimento;

import Funcoes.ApplicationPath;
import Funcoes.DbMain;
import Funcoes.FuncoesGlobais;
import Funcoes.JEmail;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import Funcoes.toPreview;
import Funcoes.toPrint;
import Funcoes.toPrint2;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileFilter;
import java.io.FileReader;
import java.io.IOException;
import java.net.MalformedURLException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author supervisor
 */
public class jViewDoctos extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.conexao;
    TableRowSorter<TableModel> sorter; TableRowSorter<TableModel> sorter2;
    String marca = ""; String pasta = "";

    String jEmailEmp = ""; String jSenhaEmail = ""; boolean jPop = false; boolean jAutentica = false;
    String jEndPopImap = ""; String jPortPopImap = ""; String jSmtp = ""; String jPortSmtp = "";
    String jAssunto = ""; String jMsgEmail = ""; String jFTP_Conta = ""; String jFTP_Porta = "";
    String jFTP_Usuario = ""; String jFTP_Senha = ""; 

    /** Creates new form jViewDoctos */
    public jViewDoctos() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jListaFiles = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbFiles = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jBuscaPasta = new javax.swing.JTextField();
        jPastas = new javax.swing.JToggleButton();
        jExtProp = new javax.swing.JToggleButton();
        jBolLoc = new javax.swing.JToggleButton();
        jRecLoc = new javax.swing.JToggleButton();
        jbtnPrint = new javax.swing.JButton();
        jbtView = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSubject = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jMensagem = new javax.swing.JTextArea();
        jbtSend = new javax.swing.JButton();
        jPara = new javax.swing.JTextField();
        jBuscar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Visualizar/Imprimir (2Âª Vias)...");
        setVisible(true);

        jListaFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos da pasta: "));

        jtbFiles.setAutoCreateRowSorter(true);
        jtbFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jtbFiles);

        jLabel4.setText("Buscar:");

        jBuscaPasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jBuscaPastaKeyReleased(evt);
            }
        });

        buttonGroup1.add(jPastas);
        jPastas.setText("Pastas");
        jPastas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jPastasActionPerformed(evt);
            }
        });

        buttonGroup1.add(jExtProp);
        jExtProp.setText("Extrato");
        jExtProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jExtPropActionPerformed(evt);
            }
        });

        buttonGroup1.add(jBolLoc);
        jBolLoc.setText("Boleto");
        jBolLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBolLocActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRecLoc);
        jRecLoc.setText("Recibo");
        jRecLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRecLocActionPerformed(evt);
            }
        });

        jbtnPrint.setText("Imprimir");
        jbtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnPrintActionPerformed(evt);
            }
        });

        jbtView.setText("Ver");
        jbtView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jListaFilesLayout = new javax.swing.GroupLayout(jListaFiles);
        jListaFiles.setLayout(jListaFilesLayout);
        jListaFilesLayout.setHorizontalGroup(
            jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jListaFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jListaFilesLayout.createSequentialGroup()
                        .addComponent(jPastas, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jExtProp, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBolLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jRecLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jListaFilesLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBuscaPasta, javax.swing.GroupLayout.DEFAULT_SIZE, 449, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnPrint)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtView)))
                .addContainerGap())
        );
        jListaFilesLayout.setVerticalGroup(
            jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jListaFilesLayout.createSequentialGroup()
                .addGroup(jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRecLoc)
                    .addComponent(jBolLoc)
                    .addComponent(jPastas)
                    .addComponent(jExtProp))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jbtnPrint)
                    .addComponent(jbtView)
                    .addComponent(jBuscaPasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.darkGray), "( Enviar documento anexado por EMail )", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 51, 153)));

        jLabel1.setText("PARA:");
        jLabel1.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel2.setText("ASSUNTO:");
        jLabel2.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        jLabel3.setText("MENSAGEM:");
        jLabel3.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        jMensagem.setColumns(20);
        jMensagem.setRows(5);
        jScrollPane1.setViewportView(jMensagem);

        jbtSend.setText("Enviar");
        jbtSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSendActionPerformed(evt);
            }
        });

        jPara.setToolTipText("");

        jBuscar.setText("Buscar");
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPara, javax.swing.GroupLayout.PREFERRED_SIZE, 498, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbtSend, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jSubject))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jPara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jSubject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel3)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(53, 53, 53)
                            .addComponent(jbtSend)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jListaFiles, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jListaFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jPastasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jPastasActionPerformed
        try {
            jBuscaPasta.setText("");

            pasta = selecionarDiretorio("reports/");
            FillPastas(pasta, "");

            sorter2 = new TableRowSorter<TableModel>(jtbFiles.getModel());
            jtbFiles.setRowSorter(sorter2);
        
            jbtView.setEnabled(false);
        } catch (Exception e) {}
    }//GEN-LAST:event_jPastasActionPerformed

    private void jExtPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jExtPropActionPerformed
        jBuscaPasta.setText("");
        pasta = new ApplicationPath().ApplicationPath() + "reports/Extratos/";
        FillPastas(pasta, "pdf");

        sorter2 = new TableRowSorter<TableModel>(jtbFiles.getModel());
        jtbFiles.setRowSorter(sorter2);
        
        jbtView.setEnabled(true);
    }//GEN-LAST:event_jExtPropActionPerformed

    private void jBolLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBolLocActionPerformed
        jBuscaPasta.setText("");
        pasta = "reports/Boletas/";
        FillPastas(pasta, "pdf");

        sorter2 = new TableRowSorter<TableModel>(jtbFiles.getModel());
        jtbFiles.setRowSorter(sorter2);
        
        jbtView.setEnabled(true);
    }//GEN-LAST:event_jBolLocActionPerformed

    private void jBuscaPastaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscaPastaKeyReleased
        if ("".equals(jBuscaPasta.getText().trim())) {
            sorter2.setRowFilter(null);
        } else {
            try {
                if (jExtProp.isSelected()) {
                    RowFilter<Object,Object> startsWithAFilter = new RowFilter<Object,Object>() {
                       public boolean include(RowFilter.Entry<? extends Object, ? extends Object> entry) {
                         for (int i = entry.getValueCount() - 1; i >= 0; i--) {
                           if (entry.getStringValue(i).startsWith(jBuscaPasta.getText().trim())) {
                             return true;
                           }
                         }
                         return false;
                       }
                     };    
                    sorter2.setRowFilter(startsWithAFilter);
                } else {
                    sorter2.setRowFilter(RowFilter.regexFilter(jBuscaPasta.getText().trim()));
                }
            } catch (PatternSyntaxException pse) {
                   System.err.println("Bad regex pattern");
            }
        }
    }//GEN-LAST:event_jBuscaPastaKeyReleased

    private void jRecLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRecLocActionPerformed
        jBuscaPasta.setText("");
        pasta = "reports/Recibos/";
        FillPastas(pasta, "");

        sorter2 = new TableRowSorter<TableModel>(jtbFiles.getModel());
        jtbFiles.setRowSorter(sorter2);
        
        jbtnPrint.setEnabled(false);
        jbtView.setEnabled(true);
    }//GEN-LAST:event_jRecLocActionPerformed

    private void jbtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnPrintActionPerformed
//        String defaultPort = VariaveisGlobais.DefaultThermalPort;
        int selRow = jtbFiles.getSelectedRow();
        int modelRow = jtbFiles.convertRowIndexToModel(selRow);
        String rdoc = (String) jtbFiles.getModel().getValueAt(modelRow, 0);
        String docName = pasta + rdoc;
        
        if (docName.substring(docName.length() - 3, docName.length()).equalsIgnoreCase("PDF")) {
            new toPrint2(docName, 1);
        } else {
            new toPrint2(docName, 2);
        }
//        String cmd = null;                
//        try {
//            if (jRecLoc.isSelected()) {
//                if (System.getProperty("os.name").toUpperCase().trim().equals("LINUX")) {
//                    cmd = "lp -d " + defaultPort + " " + docName.replace(" ", "\\ ");
//                    ComandoExterno.ComandoExterno(cmd);
//                } else {
//                    String docPrint = backlashReplace(docName);
//                    try {
//                        if (VariaveisGlobais.externalcmd == null) {
//                            cmd = "C:\\windows\\system32\\cmd.exe /c copy " + docPrint + " \\\\" + VariaveisGlobais.DefaultPrinterPort + "\\"  + defaultPort;
//                        } else {
//                            cmd = "\"" + VariaveisGlobais.externalcmd + "\" /p \"" + docPrint + "\" \"" + defaultPort + "\"";
//                        }
//                        ComandoExterno.ComandoExterno(cmd);
//                    } catch (Exception e) { e.printStackTrace(); }
//                }
//                System.out.println(cmd);
//            } else {
//                new toPrint(docName);
//            }
//        } catch (Exception e) {}
    }//GEN-LAST:event_jbtnPrintActionPerformed

protected static String[] carregaDados(String DADOS) {
       String[] texto = {};
       File arq = new File(DADOS);

       try {
	       if (arq.exists()) {//Verifico se o arquivo existe.
		       // lendo arquivo
		       FileReader arquivo = new FileReader(arq);
		       BufferedReader ler = new BufferedReader(arquivo);
		       // Colocando num StringBuffer que Ã© muito mais rÃ¡pido e ocupa
		       // menos memÃ³ria que +=
		       boolean fim = false;
		       //Lembrando que o mÃ©todo readLine() retorna null quando chega ao fim do arquivo...
		       while (!fim) {
			       String linha = ler.readLine();
			       if (linha == null)
				       fim = true;
			       else
				       texto = FuncoesGlobais.ArrayAdd(texto, linha);
		       }

		       // Fechando
		       ler.close();
		       arquivo.close();
	       } else
		       arq.createNewFile();// Criando Arquivo
       } catch (IOException erro) {
	       System.out.print("Erro 01 :" + erro.toString());
       } catch (SecurityException erro2) {
	       System.out.print("Erro 02 :" + erro2.toString());
       }
       return texto;
}    
    
    private void jbtViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtViewActionPerformed
        int selRow = jtbFiles.getSelectedRow();
        int modelRow = jtbFiles.convertRowIndexToModel(selRow);
        String rdoc = (String) jtbFiles.getModel().getValueAt(modelRow, 0);
        String docName = pasta + rdoc;
        
        if (docName.substring(docName.length() - 3, docName.length()).equalsIgnoreCase("PDF")) {
            new toPreview(docName);
        } else {
            new toPrint2(docName, 2);
        }
        
//        try {
//            ComandoExterno ce = new ComandoExterno();
//            if (System.getProperty("os.name").toUpperCase().trim().equals("LINUX")) {
//                ComandoExterno.ComandoExterno(VariaveisGlobais.reader + " " + docName );
//                //System.out.println(VariaveisGlobais.reader + " " + docName);
//            } else {
//                ComandoExterno.ComandoExterno("\"" + VariaveisGlobais.reader + "\"" + " \"" + docName + "\"");
//                //System.out.println("\"" + VariaveisGlobais.reader + "\"" + " \"" + docName + "\"");
//            }
//        } catch (Exception e) {}
    }//GEN-LAST:event_jbtViewActionPerformed

    private void jbtSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSendActionPerformed
        int selRow = jtbFiles.getSelectedRow();
        int modelRow = jtbFiles.convertRowIndexToModel(selRow);
        String rdoc = (String) jtbFiles.getModel().getValueAt(modelRow, 0);
        try {
            if (!new JEmail().SendEmail(jPara.getText(), new String[] {pasta + rdoc}, jSubject.getText(), jMensagem.getText()).equals("")) {
                JOptionPane.showMessageDialog(null, "Erro ao enviar!!!\n\nTente novamente...", "AtenÃ§Ã£o", JOptionPane.ERROR_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Enviado com sucesso!!!", "AtenÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (MalformedURLException ex) {
            Logger.getLogger(jViewDoctos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(jViewDoctos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtSendActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed
        String[][] busca = {}; String jcampo = ""; String jtabela = ""; String jwhere = "";
        
        if (jPara.getText().toUpperCase().subSequence(0, 1).equals("P")) {
            jcampo = "email";
            jtabela = "proprietarios";
            jwhere = "rgprp = '" + jPara.getText().toUpperCase().substring(1) + "'";
        } else if (jPara.getText().toUpperCase().subSequence(0, 1).equals("L")) {
            jcampo = "email";
            jtabela = "locatarios";
            jwhere = "contrato = '" + jPara.getText().toUpperCase().substring(1) + "'";            
        } if (jPara.getText().toUpperCase().subSequence(0, 1).equals("F")) {
            jcampo = "email";
            jtabela = "fiadores";
            jwhere = "contrato = '" + jPara.getText().toUpperCase().substring(1) + "'";            
        }
        try {
            busca = VariaveisGlobais.conexao.LerCamposTabela(new String[] {jcampo}, jtabela, jwhere);
        } catch (Exception e) {}

        try {
            if (!busca[0][3].trim().equalsIgnoreCase("")) {
                jPara.setText(busca[0][3]);
            }
        } catch (Exception e) {}
    }//GEN-LAST:event_jBuscarActionPerformed

   private void FillPastas(String pasta, String extencao) {
        jListaFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos da pasta: " + pasta));

        File[] boletas = listarArquivos(pasta, extencao);

        TableControl.Clear(jtbFiles);
        // Seta Cabecario
        TableControl.header(jtbFiles, new String[][] {{"Arquivos da pasta"},{"1000"}});
        for (int i=0; i<boletas.length;i++) {
            TableControl.add(jtbFiles, new String[][]{{boletas[i].getName()},{"L"}}, true);
        }
    }

    public String selecionarDiretorio(String pastainicial) {
      String caminho = null;  
  
      JFileChooser dFC = new JFileChooser(pastainicial);
  
      dFC.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
  
      int resposta = dFC.showOpenDialog(null);  
      if (resposta == JFileChooser.APPROVE_OPTION) {  
         caminho = dFC.getSelectedFile().getPath();  
      } else {  
         System.out.print("ExecuÃ§Ã£o cancelada.");  
      }  
  
      return caminho;  
   }  
    
   // lista os arquivos apartir de determinada extensÃ£o  
   public File[] listarArquivos(String caminhoDiretorio, final String extensao){  
      File F = new File(caminhoDiretorio);  
        
        
      File[] files = F.listFiles(new FileFilter() {  
  
         public boolean accept(File pathname) {  
            return pathname.getName().toLowerCase().endsWith(extensao);  
         }  
      });      
        
      return files;  
   }  
   // Lista apenas os diretorios  
   public File[] listarDiretorios(String caminhoDiretorio){  
      File F = new File(caminhoDiretorio);  
        
        
      File[] files = F.listFiles(new FileFilter() {  
  
         public boolean accept(File pathname) {  
            return pathname.getName().toLowerCase().endsWith("");  
         }  
      });      
        
      return files;  
   }  

private void RemoveJavaPos() {
    String[] simbols = {"\t",
    "\n",
    "\f",
    "\r",
    "\u0018",
    "\u001B" + "\f",
    "\u001B" + "\u004A",
    "\u001B" + "\u004B",
    "\u001B" + "\u0032",
    "\u001B" + "\u0040",
    "\u001B" + "\u0056",
    "\u001B" + "\u0056" + "\u0001",
    "\u001B" + "\u0052" + "\u000C",
    "\u001B" + "\u0074" + "\u0003",
    "\u001D" + "\u0042" + "\u0000",
    "\u001D" + "\u0042" + "\u0001",
    "\u001B" + "i",
    "\u001B" + "m",
    "\u0020",

    "\u0010" + "\u0004" + (char)0,
    "\u0010" + "\u0004" + (char)1,
    "\u0010" + "\u0004" + (char)2,
    "\u0010" + "\u0004" + (char)3,
    "\u0010" + "\u0004" + (char)4,
    "\u0010" + "\u0004" + (char)5,
    "\u0010" + "\u0004" + (char)6,
    "\u0010" + "\u0004" + (char)7,
    "\u0010" + "\u0004" + (char)8,
    "\u0010" + "\u0004" + (char)9,
    
    "\u001B" + "\u0064" + (char)0,
    "\u001B" + "\u0064" + (char)1,
    "\u001B" + "\u0064" + (char)2,
    "\u001B" + "\u0064" + (char)3,
    "\u001B" + "\u0064" + (char)4,
    "\u001B" + "\u0064" + (char)5,
    "\u001B" + "\u0064" + (char)6,
    "\u001B" + "\u0064" + (char)7,
    "\u001B" + "\u0064" + (char)8,
    "\u001B" + "\u0064" + (char)9,
    
    "\u001B" + "\u0045" + (char)0,
    "\u001B" + "\u0045" + (char)1,    
    "\u001B" + "\u0045" + (char)2,
    
    "\u001B" + "\u0020" + (char)1,
    
    "\u001B" + "\u0021" + (char)1,
    "\u001B" + "\u0024" + (char)1 + (char)1,
    
    "\u001B" + "\u0033" + (char)1,
   
    "\u001B" + "\u0061" + (char)(48 + 1),
    
    "\u001D" + "\u0021" + (char)1,

    "\u001B" + "\u0047" + (char)1,

    "\u001B" + "\u0072" + (char)1};

}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JToggleButton jBolLoc;
    private javax.swing.JTextField jBuscaPasta;
    private javax.swing.JButton jBuscar;
    private javax.swing.JToggleButton jExtProp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jListaFiles;
    private javax.swing.JTextArea jMensagem;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jPara;
    private javax.swing.JToggleButton jPastas;
    private javax.swing.JToggleButton jRecLoc;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jSubject;
    private javax.swing.JButton jbtSend;
    private javax.swing.JButton jbtView;
    private javax.swing.JButton jbtnPrint;
    private javax.swing.JTable jtbFiles;
    // End of variables declaration//GEN-END:variables
}
