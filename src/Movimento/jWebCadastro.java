/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jWebCadastro.java
 *
 * Created on 16/11/2011, 10:20:09
 */
package Movimento;

import Funcoes.AutoCompletion;
import Funcoes.DbMain;
import Funcoes.FuncoesGlobais;
import Funcoes.MyFTP;
import Funcoes.TableControl;
import Funcoes.VariaveisGlobais;
import java.io.File;
import java.io.FileFilter;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.PatternSyntaxException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author user
 */
public class jWebCadastro extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.conexao;
    TableRowSorter<TableModel> sorter; TableRowSorter<TableModel> sorter2;
    String marca = ""; String pasta = ""; String tfiltro;

    boolean bExecNome = false, bExecCodigo = false;
    
    
    /** Creates new form jWebCadastro */
    public jWebCadastro() {
        initComponents();
        try {
            marca = conn.LerParametros("MARCA").toLowerCase();
        } catch (SQLException ex) {
            Logger.getLogger(jWebCadastro.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        FillUserSite(jNoSite);
        jcxClear.setVisible(false);
        bVersão.setVisible(false);
    }

    private void FillUserSite(JTable table) {
        
        DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);
        // Seta Cabecario
        TableControl.header(table, new String[][] {{"local","tipo","id", "nome", "senha"},{"50", "50", "100", "500","160"}});

        String sSql = "SELECT * FROM site_usuarios where local='&1.' ORDER BY local,tipo,nome;";
        sSql = FuncoesGlobais.Subst(sSql, new String[] {marca});
        ResultSet imResult = conn_site.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        try {
            while (imResult.next()) {
                String tlocal = imResult.getString("local");
                String ttipo = imResult.getString("tipo").toUpperCase();
                String tid = imResult.getString("id");
                String tnome = imResult.getString("nome");
                String tsenha = imResult.getString("senha");
                TableControl.add(table, new String[][]{{tlocal, ttipo, tid, tnome, tsenha},{"C","C","C","L","L"}}, true);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        DbMain.FecharTabela(imResult);
        conn_site.FecharConexao();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jFileChooser1 = new javax.swing.JFileChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jNoSite = new javax.swing.JTable();
        jSiteDel = new javax.swing.JButton();
        jListarFiles = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jNoSiteArqs = new javax.swing.JTable();
        jSiteDelArq = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jEnviarSite = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jBusca = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jLocal = new javax.swing.JTable();
        jtgProp = new javax.swing.JToggleButton();
        jtgLoc = new javax.swing.JToggleButton();
        jPanel6 = new javax.swing.JPanel();
        jbtEnviar = new javax.swing.JButton();
        jcxClear = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jcbID = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jcbNOME = new javax.swing.JComboBox();
        jListaFiles = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jtbFiles = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        jBuscaPasta = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        tipo = new javax.swing.JComboBox();
        jLabel5 = new javax.swing.JLabel();
        ano = new javax.swing.JSpinner();
        jLabel6 = new javax.swing.JLabel();
        bVersão = new javax.swing.JCheckBox();
        mes = new javax.swing.JSpinner();

        jList1.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(jList1);

        setClosable(true);
        setTitle(".:: Cadastro Web .::");
        setVisible(true);

        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuários cadastrados no site"));

        jNoSite.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(jNoSite);

        jSiteDel.setText("Apagar");
        jSiteDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSiteDelActionPerformed(evt);
            }
        });

        jListarFiles.setText("Listar Arquivos");
        jListarFiles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jListarFilesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jListarFiles, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSiteDel, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSiteDel)
                    .addComponent(jListarFiles))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos"));

        jNoSiteArqs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jNoSiteArqs);

        jSiteDelArq.setText("Apagar");
        jSiteDelArq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jSiteDelArqActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSiteDelArq, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 681, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 74, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSiteDelArq)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Web", jPanel4);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Proprietários / Locatários do Sistema"));

        jEnviarSite.setText("Cadastrar no Site");
        jEnviarSite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jEnviarSiteActionPerformed(evt);
            }
        });

        jLabel3.setText("Buscar:");

        jBusca.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jBuscaKeyReleased(evt);
            }
        });

        jLocal.setAutoCreateRowSorter(true);
        jLocal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jLocal.setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jScrollPane2.setViewportView(jLocal);

        buttonGroup1.add(jtgProp);
        jtgProp.setText("Proprietários");
        jtgProp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtgPropActionPerformed(evt);
            }
        });

        buttonGroup1.add(jtgLoc);
        jtgLoc.setText("Locatários");
        jtgLoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtgLocActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 669, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jtgProp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jtgLoc, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(372, 372, 372))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addComponent(jBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jEnviarSite, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtgProp)
                    .addComponent(jtgLoc))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jEnviarSite)
                    .addComponent(jBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Local", jPanel5);

        jbtEnviar.setText("Enviar");
        jbtEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtEnviarActionPerformed(evt);
            }
        });

        jcxClear.setSelected(true);
        jcxClear.setText("Limpar pasta antes de transmitir");

        jPanel7.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Id:");

        jcbID.setEditable(true);
        jcbID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbIDActionPerformed(evt);
            }
        });

        jLabel2.setText("Nome:");

        jcbNOME.setEditable(true);
        jcbNOME.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbNOMEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbID, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jcbNOME, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jcbID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jcbNOME, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jListaFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos da pasta: "));

        jtbFiles.setAutoCreateRowSorter(true);
        jtbFiles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jtbFiles.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane4.setViewportView(jtbFiles);

        jLabel4.setText("Buscar:");

        jBuscaPasta.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jBuscaPastaKeyReleased(evt);
            }
        });

        jPanel8.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));

        tipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Recibos", "Boletas", "Extratos", "Relatórios" }));
        tipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tipoActionPerformed(evt);
            }
        });

        jLabel5.setText("Ano:");

        ano.setModel(new javax.swing.SpinnerNumberModel(2014, 2014, 2050, 1));
        ano.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                anoStateChanged(evt);
            }
        });

        jLabel6.setText("Mês:");

        bVersão.setText("Versão Anterior");
        bVersão.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVersãoActionPerformed(evt);
            }
        });

        mes.setModel(new javax.swing.SpinnerListModel(new String[] {"Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"}));
        mes.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                mesStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bVersão, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(ano, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(bVersão)
                    .addComponent(mes, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jListaFilesLayout = new javax.swing.GroupLayout(jListaFiles);
        jListaFiles.setLayout(jListaFilesLayout);
        jListaFilesLayout.setHorizontalGroup(
            jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jListaFilesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addGroup(jListaFilesLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBuscaPasta))
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jListaFilesLayout.setVerticalGroup(
            jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jListaFilesLayout.createSequentialGroup()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jListaFilesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBuscaPasta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jListaFiles, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jcxClear, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jListaFiles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcxClear)
                    .addComponent(jbtEnviar))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Envio", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private boolean BuscarTable(JTable table, int column, String what) {
    boolean found = false;
    for (int i=0;i<table.getRowCount();i++) {
        String tmarca = (String) table.getValueAt(i, 0);
        if (marca.equals(tmarca)) {
            String valuecol = (String) table.getValueAt(i, column);
            if (what.equals(valuecol)) {found = true; break; }
        }
    }

    return found;
}

private void jEnviarSiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jEnviarSiteActionPerformed
    DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);
    jEnviarSite.setEnabled(false);
    int[] selRow = jLocal.getSelectedRows();

    String sLst = "";
    String rlocal = "", rtipo = "", rid = "", rnome = "", rsenha = "";
    for (int i=0;i<=selRow.length - 1;i++) {
        int nRow = selRow[i];
        int modelRow = jLocal.convertRowIndexToModel(nRow);

        if (!BuscarTable(jNoSite, 2, (String) jLocal.getModel().getValueAt(modelRow, 2))) {
            rlocal = (String) jLocal.getModel().getValueAt(modelRow, 0);
            rtipo = (String) jLocal.getModel().getValueAt(modelRow, 1);
            rid = (String) jLocal.getModel().getValueAt(modelRow, 2);
            rnome = (String) jLocal.getModel().getValueAt(modelRow, 3);
            rsenha = (String) jLocal.getModel().getValueAt(modelRow, 4);

            rsenha = rsenha.replace(".", "");
            rsenha = rsenha.replace("/", "");
            rsenha = rsenha.replace("-", "");
            rsenha =  rsenha.substring(0, 4);

            String sql = "INSERT INTO site_usuarios(id, local, senha, tipo, nome) VALUES ('&1.','&2.','&3.','&4.','&5.');";
            sql = FuncoesGlobais.Subst(sql, new String[] {rid,rlocal,rsenha,rtipo,rnome});

            conn_site.ExecutarComando(sql);
        } else {
            JOptionPane.showMessageDialog(null, "Contrato já cadastrado no site!!!", "Atenção", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    FillUserSite(jNoSite);
    conn_site.FecharConexao();
    jEnviarSite.setEnabled(true);
    
}//GEN-LAST:event_jEnviarSiteActionPerformed

private void jSiteDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSiteDelActionPerformed
    DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);
    int selRow = jNoSite.getSelectedRow();
    String rid = "";
    if (selRow > -1) {
        rid = (String) jNoSite.getModel().getValueAt(selRow, 2);
        
        String sql = "DELETE FROM site_usuarios WHERE id = '&1.';";
        sql = FuncoesGlobais.Subst(sql, new String[] {rid});
        conn_site.ExecutarComando(sql);
        
        sql = "DELETE FROM site_usudoc WHERE id = '&1.';";
        sql = FuncoesGlobais.Subst(sql, new String[] {rid});        
        conn_site.ExecutarComando(sql);
        
        FillUserSite(jNoSite);
      
    }
    conn_site.FecharConexao();

}//GEN-LAST:event_jSiteDelActionPerformed

private void jListarFilesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jListarFilesActionPerformed
    int selRow = jNoSite.getSelectedRow();
    String rid = "";
    if (selRow > -1) {
        rid = (String) jNoSite.getModel().getValueAt(selRow, 2);
        ListaFiles(jNoSiteArqs, rid);
    }
}//GEN-LAST:event_jListarFilesActionPerformed

private void ListaFiles(JTable table, String rid) {
    DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);

    // Seta Cabecario
    TableControl.header(table, new String[][] {{"ord", "id", "doc"},{"80", "100", "500"}});

    String sSql = "SELECT ord, id, doc FROM site_usudoc WHERE id = '" + rid + "' ORDER BY id;";
    ResultSet imResult = conn_site.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

    try {
        while (imResult.next()) {
            String tord = imResult.getString("ord");
            String tid = imResult.getString("id");
            String tdoc = imResult.getString("doc");
            TableControl.add(table, new String[][]{{tord, tid, tdoc},{"C","C","L"}}, true);

        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
    DbMain.FecharTabela(imResult);
    conn_site.FecharConexao();    
}

private void jSiteDelArqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jSiteDelArqActionPerformed
    DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);
    int selRow = jNoSite.getSelectedRow();
    String rlocal = (String) jNoSite.getModel().getValueAt(selRow, 0);

    selRow = jNoSiteArqs.getSelectedRow();
    String rid = ""; String rdoc = ""; String sql = "";
    if (selRow > -1) {
        rid = (String) jNoSiteArqs.getModel().getValueAt(selRow, 1);
        rdoc = (String) jNoSiteArqs.getModel().getValueAt(selRow, 2);
        
        sql = "DELETE FROM site_usudoc WHERE id = '&1.' and local='&2.';";
        sql = FuncoesGlobais.Subst(sql, new String[] {rid, rlocal});        
        conn_site.ExecutarComando(sql);

        // remove ftp
        MyFTP.FTPDel(new String[] {rdoc});
        
        ListaFiles(jNoSiteArqs, rid);
      
    }
    conn_site.FecharConexao();    
}//GEN-LAST:event_jSiteDelArqActionPerformed

    private void jBuscaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscaKeyReleased
        if ("".equals(jBusca.getText().trim())) {
            sorter.setRowFilter(null);
        } else {
            try {
                sorter.setRowFilter(RowFilter.regexFilter(jBusca.getText().trim()));
            } catch (PatternSyntaxException pse) {
                   System.err.println("Bad regex pattern");
            }
        }        
    }//GEN-LAST:event_jBuscaKeyReleased

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 2) {
            jcbID.removeAllItems();
            jcbNOME.removeAllItems();
            for (int i=0;i < jNoSite.getRowCount();i++) {
                if (marca.equals(jNoSite.getModel().getValueAt(i, 0))) {
                    jcbID.addItem(jNoSite.getModel().getValueAt(i, 2));
                    jcbNOME.addItem(jNoSite.getModel().getValueAt(i, 3));
                }
            }

            AutoCompletion.enable(jcbID);
            AutoCompletion.enable(jcbNOME);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void jbtEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtEnviarActionPerformed
        DbMain conn_site = new DbMain(VariaveisGlobais.siteIP,VariaveisGlobais.siteUser,VariaveisGlobais.sitePwd,VariaveisGlobais.siteDbName);
        jbtEnviar.setEnabled(false);
        int[] selRow = jtbFiles.getSelectedRows();

        String rlocal = "", rid = "";

        rlocal = marca;
        rid = jcbID.getSelectedItem().toString().trim();

        for (int i=0;i<=selRow.length - 1;i++) {
            int nRow = selRow[i];
            int modelRow = jtbFiles.convertRowIndexToModel(nRow);
            String rdoc = (String) jtbFiles.getModel().getValueAt(modelRow, 0);

            if (jcxClear.isSelected()) {
                MyFTP.FTPDel(new String[] {});
                
                String sql1 = "DELETE FROM site_usudoc WHERE id = '&1.' and local = '&2.';";
                sql1 = FuncoesGlobais.Subst(sql1, new String[] {rid, rlocal});
                conn_site.ExecutarComando(sql1);
            }

            String sql = "INSERT INTO site_usudoc(id, local, doc) VALUES ('&1.','&2.','&3.');";
            sql = FuncoesGlobais.Subst(sql, new String[] {rid,rlocal, rdoc.replaceAll(" ", "_")});
            conn_site.ExecutarComando(sql);

            //pasta = "reports/Boletas/";
            MyFTP.main(new String[] {pasta + "/" + rdoc});
        }

        conn_site.FecharConexao();
        jbtEnviar.setEnabled(true);        
                
    }//GEN-LAST:event_jbtEnviarActionPerformed

    private void jcbIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbIDActionPerformed
        if (!bExecNome) {
            int pos = jcbID.getSelectedIndex();
            if (jcbNOME.getItemCount() > 0) {bExecCodigo = true; jcbNOME.setSelectedIndex(pos); bExecCodigo = false; }
        }
    }//GEN-LAST:event_jcbIDActionPerformed

    private void jcbNOMEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbNOMEActionPerformed
        if (!bExecCodigo) {
            int pos = jcbNOME.getSelectedIndex();
            if (jcbID.getItemCount() > 0) {bExecNome = true; jcbID.setSelectedIndex(pos); bExecNome = false; }
        }
    }//GEN-LAST:event_jcbNOMEActionPerformed

    private void jBuscaPastaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jBuscaPastaKeyReleased
        if ("".equals(jBuscaPasta.getText().trim())) {
            sorter2.setRowFilter(null);
        } else {
            try {
                sorter2.setRowFilter(RowFilter.regexFilter(jBuscaPasta.getText().trim()));
            } catch (PatternSyntaxException pse) {
                   System.err.println("Bad regex pattern");
            }
        }
    }//GEN-LAST:event_jBuscaPastaKeyReleased

    private void jtgPropActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtgPropActionPerformed
        jBusca.setText("");
        FillUserLocalProp(jLocal);

        sorter = new TableRowSorter<TableModel>(jLocal.getModel());
        jLocal.setRowSorter(sorter);
    }//GEN-LAST:event_jtgPropActionPerformed

    private void jtgLocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtgLocActionPerformed
        jBusca.setText("");
        FillUserLocalLoca(jLocal);

        sorter = new TableRowSorter<TableModel>(jLocal.getModel());
        jLocal.setRowSorter(sorter);        
    }//GEN-LAST:event_jtgLocActionPerformed

    private void tipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tipoActionPerformed
        FillFiles();
    }//GEN-LAST:event_tipoActionPerformed

    private void anoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_anoStateChanged
        FillFiles();
    }//GEN-LAST:event_anoStateChanged

    private void bVersãoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVersãoActionPerformed
        FillFiles();
        ano.setEnabled(!bVersão.isSelected());
        mes.setEnabled(!bVersão.isSelected());
    }//GEN-LAST:event_bVersãoActionPerformed

    private void mesStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_mesStateChanged
        FillFiles();
    }//GEN-LAST:event_mesStateChanged

    private void FillFiles() {
        if (tipo.getSelectedItem().equals("Recibos")) {
            pasta = "reports/Recibos/" + (!bVersão.isSelected() ? ano.getValue().toString() + "/" + mes.getValue() + "/" : "");
            tfiltro = (!bVersão.isSelected() ? "(.*)" + jcbID.getModel().getSelectedItem().toString() + "(.*)" + ".pdf" : "");
            FillPastas(pasta, tfiltro);
        } else if (tipo.getSelectedItem().equals("Boletas")) {
            pasta = "reports/Boletas/" + (!bVersão.isSelected() ? ano.getValue().toString() + "/" + mes.getValue() + "/" : "");
            tfiltro = (!bVersão.isSelected() ? "(.*)" + jcbID.getModel().getSelectedItem().toString() + "(.*)" + ".pdf" : "");
            FillPastas(pasta, tfiltro);
        } else if (tipo.getSelectedItem().equals("Extratos")) {
            pasta = "reports/Extratos/" + (!bVersão.isSelected() ? ano.getValue().toString() + "/" + mes.getValue() + "/" : "");
            tfiltro = (!bVersão.isSelected() ? "(.*)" + jcbID.getModel().getSelectedItem().toString() + "(.*)" + ".pdf" : "");
            FillPastas(pasta, tfiltro);
        } else if (tipo.getSelectedItem().equals("Relatórios")) {
            pasta = "reports/Relatorios/" + (!bVersão.isSelected() ? ano.getValue().toString() + "/" + mes.getValue() + "/" : "");
            tfiltro = (!bVersão.isSelected() ? "(.*)" + jcbID.getModel().getSelectedItem().toString() + "(.*)" + ".pdf" : "");
            FillPastas(pasta, tfiltro);
        }
    }
    
    private void FillPastas(String pasta, String extencao) {
        jListaFiles.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivos da pasta: " + pasta));

        File[] boletas = listarArquivos(pasta, extencao);

        TableControl.Clear(jtbFiles);
        
        if (boletas != null) {
            // Seta Cabecario
            TableControl.header(jtbFiles, new String[][] {{"Arquivos da pasta"},{"1000"}});
            for (int i=0; i<boletas.length;i++) {
                TableControl.add(jtbFiles, new String[][]{{boletas[i].getName()},{"L"}}, true);
            }
            sorter2 = new TableRowSorter<TableModel>(jtbFiles.getModel());   
            jtbFiles.setRowSorter(sorter2);
        }
    }

    private void FillUserLocalProp(JTable table) {
        TableControl.Clear(table);
        // Seta Cabecario
        TableControl.header(table, new String[][] {{"local","tipo","id", "nome", "cnpj"},{"50", "50", "80", "500", "160"}});

        String sSql = "SELECT '" + marca + "' AS local, 'P' AS tipo, rgprp as id, nome, cpfcnpj AS senha  FROM proprietarios WHERE cpfcnpj <> '' ORDER BY nome;";
        ResultSet imResult = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        try {
            while (imResult.next()) {
                String tlocal = imResult.getString("local");
                String ttipo = imResult.getString("tipo").toUpperCase();
                String tid = imResult.getString("id");
                String tnome = imResult.getString("nome");
                String tsenha = imResult.getString("senha");
                TableControl.add(table, new String[][]{{tlocal, ttipo, tid, tnome, tsenha},{"C","C","C","L","L"}}, true);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        DbMain.FecharTabela(imResult);
    }

    private void FillUserLocalLoca(JTable table) {
        TableControl.Clear(jLocal);
        // Seta Cabecario
        TableControl.header(table, new String[][] {{"local","tipo","id", "nome", "cnpj"},{"50", "50", "80", "500", "160"}});

        String sSql = "SELECT '" + marca + "' AS local, 'L' AS tipo, contrato as id, nomerazao as nome, cpfcnpj AS senha  FROM locatarios WHERE cpfcnpj <> '' ORDER BY nome;";
        ResultSet imResult = this.conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        try {
            while (imResult.next()) {
                String tlocal = imResult.getString("local");
                String ttipo = imResult.getString("tipo").toUpperCase();
                String tid = imResult.getString("id");
                String tnome = imResult.getString("nome");
                String tsenha = imResult.getString("senha");
                TableControl.add(table, new String[][]{{tlocal, ttipo, tid, tnome, tsenha},{"C","C","C","L","L"}}, true);

            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        DbMain.FecharTabela(imResult);
    }

    public String selecionarDiretorio(String pastainicial) {
      String caminho = null;  
  
      JFileChooser dFC = new JFileChooser(pastainicial);
  
      dFC.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);  
  
      int resposta = dFC.showOpenDialog(null);  
      if (resposta == JFileChooser.APPROVE_OPTION) {  
         caminho = dFC.getSelectedFile().getPath();  
      } else {  
         System.out.print("Execução cancelada.");  
         System.exit(0);  
      }  
  
      return caminho;  
   }  
   // lista os arquivos apartide de determinada extensão  
   public File[] listarArquivos(String caminhoDiretorio, final String extensao){  
      File F = new File(caminhoDiretorio);  
        
        
      File[] files = F.listFiles(new FileFilter() {  
  
         public boolean accept(File pathname) {  
             boolean retorno = false;
             try {
                retorno = pathname.getName().toLowerCase().matches(extensao);  
             } catch (PatternSyntaxException ex) {ex.printStackTrace();}
             return retorno;
         }  
      });      
        
      return files;  
   }  
   // Lista apenas os diretorios  
   public File[] listarDiretorios(String caminhoDiretorio){  
      File F = new File(caminhoDiretorio);  
        
        
      File[] files = F.listFiles(new FileFilter() {  
  
         public boolean accept(File pathname) {  
            return pathname.getName().toLowerCase().endsWith("");  
         }  
      });      
        
      return files;  
   }  
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner ano;
    private javax.swing.JCheckBox bVersão;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField jBusca;
    private javax.swing.JTextField jBuscaPasta;
    private javax.swing.JButton jEnviarSite;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jListaFiles;
    private javax.swing.JButton jListarFiles;
    private javax.swing.JTable jLocal;
    private javax.swing.JTable jNoSite;
    private javax.swing.JTable jNoSiteArqs;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JButton jSiteDel;
    private javax.swing.JButton jSiteDelArq;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton jbtEnviar;
    private javax.swing.JComboBox jcbID;
    private javax.swing.JComboBox jcbNOME;
    private javax.swing.JCheckBox jcxClear;
    private javax.swing.JTable jtbFiles;
    private javax.swing.JToggleButton jtgLoc;
    private javax.swing.JToggleButton jtgProp;
    private javax.swing.JSpinner mes;
    private javax.swing.JComboBox tipo;
    // End of variables declaration//GEN-END:variables
}
