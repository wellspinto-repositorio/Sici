/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * jCaixa.java
 *
 * Created on 20/06/2011, 12:36:03
 */
package Movimento;

import Funcoes.Dates;
import Funcoes.DbMain;
import Funcoes.FuncoesGlobais;
import Funcoes.JavaPOS;
import Funcoes.LerValor;
import Funcoes.Pad;
import Funcoes.PrinterPOS;
import Funcoes.VariaveisGlobais;
import Funcoes.jThermica;
import Funcoes.toPrint;
import Sici.Partida.Collections;
import java.awt.Color;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Date;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author supervisor
 */
public class jCaixa extends javax.swing.JInternalFrame {
    DbMain conn = VariaveisGlobais.conexao;
    
    /** Creates new form jCaixa */
    public jCaixa() {
        initComponents();

        ListaCaixas();
    }

    private void ListaCaixas() {
        String sSql = "SELECT cx_data FROM caixa where lower(cx_logado) = '" + VariaveisGlobais.usuario.trim().toLowerCase() + "' AND cx_aut > 0 group by cx_data;";
        ResultSet rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        jCaixas.removeAll();

        DefaultListModel lm = new DefaultListModel();
        try {
            while (rs.next()) {
                lm.addElement(Dates.DateFormata("dd/MM/yyyy", rs.getDate("cx_data")));
            }
        } catch (SQLException ex) {}
        jCaixas.setModel(lm);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jVRDN = new javax.swing.JFormattedTextField();
        jVRCH = new javax.swing.JFormattedTextField();
        jVRCP = new javax.swing.JFormattedTextField();
        jVRCT = new javax.swing.JFormattedTextField();
        jbtnFechar = new javax.swing.JButton();
        jbtnSair = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jCaixas = new javax.swing.JList();

        setClosable(true);
        setIconifiable(true);
        setTitle(".:: Fechamento do Caixa ::.");
        setVisible(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Apurações do Caixa"));
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 8));

        jLabel1.setText("Dinheiro:");

        jLabel2.setText("Cheque:");

        jLabel3.setText("Cheque Pré:");

        jLabel4.setText("Banco:");
        jLabel4.setEnabled(false);

        jVRDN.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRDN.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRDN.setText("0,00");
        jVRDN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jVRDNActionPerformed(evt);
            }
        });

        jVRCH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRCH.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRCH.setText("0,00");

        jVRCP.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRCP.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRCP.setText("0,00");

        jVRCT.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,##0.00"))));
        jVRCT.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        jVRCT.setText("0,00");
        jVRCT.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jVRDN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jVRCH, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jVRCP, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                    .addComponent(jVRCT, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel1)
                    .addComponent(jVRDN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel2)
                    .addComponent(jVRCH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel3)
                    .addComponent(jVRCP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(jLabel4)
                    .addComponent(jVRCT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtnFechar.setText("Fechar");
        jbtnFechar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnFecharActionPerformed(evt);
            }
        });

        jbtnSair.setText("Sair");
        jbtnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSairActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(jCaixas);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 377, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jbtnSair, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE)
                            .addComponent(jbtnFechar, javax.swing.GroupLayout.DEFAULT_SIZE, 105, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jbtnFechar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtnSair))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSairActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbtnSairActionPerformed

    private void jbtnFecharActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnFecharActionPerformed
        int row = jCaixas.getSelectedIndex();
        System.out.println(row);
        if (row > 0) {
            JOptionPane.showMessageDialog(null, "Você esta fechando um caixa posterior!!!\nExistem caixas anteriores não fechadas...\nVocê deve primeiro fecha-los.", "Atenção", JOptionPane.INFORMATION_MESSAGE);
            return;
        } else if (row == 0) {
            //if (VariaveisGlobais.DefaultPrinterMode.equalsIgnoreCase("NORMAL")) {
                Fechar(Dates.StringtoDate(jCaixas.getModel().getElementAt(row).toString(), "dd/MM/yyyy"));
            //} else {
            //    Fechar_new(Dates.StringtoDate(jCaixas.getModel().getElementAt(row).toString(), "dd/MM/yyyy"));
            //}
        } else JOptionPane.showMessageDialog(null, "Você deve selecionar uma data na lista!!!", "Atenção", JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_jbtnFecharActionPerformed

    private void jVRDNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jVRDNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jVRDNActionPerformed

    private String[] PegaValor(String lnh) {
        String dta = "", bco = "", age = "", nch = "", vrl = "";
        int pos = -1;
        
        pos = lnh.indexOf("DT:");
        if (pos > -1) { dta = lnh.substring(pos + 3, pos + 3 + 10); } else dta = "          ";

        pos = lnh.indexOf("BC:");
        if (pos > -1) { bco = lnh.substring(pos + 3, pos + 3 + 3); } else bco = "   ";

        pos = lnh.indexOf("AG:");
        if (pos > -1) { age = lnh.substring(pos + 3, pos + 3 + 5); } else age = "     ";

        pos = lnh.indexOf("CH:");
        if (pos > -1) { nch = lnh.substring(pos + 3, pos + 3 + 10); } else nch = "          ";

        pos =  lnh.indexOf("CT:");
        if (pos > -1) { vrl = lnh.substring(pos + 3); }

        pos = lnh.indexOf("DN:");
        if (pos > -1) { vrl = lnh.substring(pos + 3); }
        
        pos = lnh.indexOf("VR:");
        if (pos > -1) { vrl = lnh.substring(pos + 3); }
        
        
        return new String[] {dta, bco, age, nch, vrl};
    }
    
    private float[][] Totaliza(String dDataCaixa) {
        ResultSet myRst;
        String sSql = "";
        float tt_recibo_dn = 0, tt_recibo_ch = 0, tt_recibo_cp = 0, tt_recibo_ct = 0;
        float tt_extrato_dn = 0, tt_extrato_ch = 0, tt_extrato_cp = 0, tt_extrato_ct = 0;
        float tt_despesa_dn = 0, tt_despesa_ch = 0, tt_despesa_cp = 0, tt_despesa_ct = 0;
        float tt_deposito_dn = 0, tt_deposito_ch = 0, tt_deposito_cp = 0, tt_deposito_ct = 0;
        float tt_avcred_dn = 0, tt_avcred_ch = 0, tt_avcred_cp = 0, tt_avcred_ct = 0;
        float tt_avdeb_dn = 0, tt_avdeb_ch = 0, tt_avdeb_cp = 0, tt_avdeb_ct = 0;
        float tt_caixa_dn = 0, tt_caixa_ch = 0, tt_caixa_cp = 0, tt_caixa_ct = 0;
        float tt_pass_dn = 0, tt_pass_ch = 0, tt_pass_cp = 0, tt_pass_ct = 0;
        float tt_passd_dn = 0, tt_passd_ch = 0, tt_passd_cp = 0, tt_passd_ct = 0;
        float tt_adi_dn = 0, tt_adi_ch = 0, tt_adi_cp = 0, tt_adi_ct = 0;
        
        //'* RECIBOS
        tt_recibo_dn = 0;
        tt_recibo_ch = 0;
        tt_recibo_cp = 0;
        tt_recibo_ct = 0;
        
        // RECIBO DINHEIRO
        sSql = "select IF(isnull(cx_vrdn),0,cx_vrdn) as valor1 ,IF(IsNull(cx_vrch),0,cx_vrch) as valor2, " +
            "IF(IsNull(cx_vrdn),0,cx_vrdn) + IF(IsNull(cx_vrch),0,cx_vrch) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
            " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_recibo_dn = tt_recibo_dn + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        // RECIBO CHEQUE/DINHEIRO
        sSql = "select IF(IsNull(cx_vrdn),0,cx_vrdn) as valor1,IF(IsNull(cx_vrch),0,cx_vrch) as valor2, " +
                "IF(IsNull(cx_vrdn),0,cx_vrdn) + IF(IsNull(cx_vrch),0,cx_vrch) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_recibo_dn = tt_recibo_dn + myRst.getFloat("valor1");
                tt_recibo_ch = tt_recibo_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* RECIBO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_recibo_ch = tt_recibo_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* RECIBO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_recibo_cp = tt_recibo_cp + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* RECIBO/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'rc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_recibo_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* EXTRATOS
        tt_extrato_dn = 0;
        tt_extrato_ch = 0;
        tt_extrato_cp = 0;
        tt_extrato_ct = 0;
        
        //* EXTRATO/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_extrato_dn = myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* EXTRATO CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_extrato_dn = tt_extrato_dn + myRst.getFloat("valor1");
                tt_extrato_ch = myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* EXTRATO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_extrato_ch = tt_extrato_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* EXTRATO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_extrato_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* EXTRATO/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'et'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_extrato_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DESPESAS
        tt_despesa_dn = 0;
        tt_despesa_ch = 0;
        tt_despesa_cp = 0;
        tt_despesa_ct = 0;
        
        //* DESPESA/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_despesa_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DESPESA CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_despesa_dn = tt_despesa_dn + myRst.getFloat("valor1");
                tt_despesa_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DESPESA/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_despesa_ch = tt_despesa_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DESPESA/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_despesa_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DESPESA/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'dp'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_despesa_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DEPOSITOS
        tt_deposito_dn = 0;
        tt_deposito_ch = 0;
        tt_deposito_cp = 0;
        tt_deposito_ct = 0;
        
        //* DEPOSITO/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_deposito_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DEPOSITO CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_deposito_dn = tt_deposito_dn + myRst.getFloat("valor1");
                tt_deposito_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DEPOSITO/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_deposito_ch = tt_deposito_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DEPOSITO/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_deposito_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* DEPOSITO/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ds'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_deposito_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVISOS CREDITOS
        tt_avcred_dn = 0;
        tt_avcred_ch = 0;
        tt_avcred_cp = 0;
        tt_avcred_ct = 0;
        
        //* AVCRED/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avcred_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVCRED CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avcred_dn = tt_avcred_dn + myRst.getFloat("valor1");
                tt_avcred_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVCRED/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avcred_ch = tt_avcred_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVCRED/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avcred_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVCRED/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avcred_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* AVISOS DEBITOS
        tt_avdeb_dn = 0;
        tt_avdeb_ch = 0;
        tt_avdeb_cp = 0;
        tt_avdeb_ct = 0;
        
        //* avdeb/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avdeb_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* avdeb CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avdeb_dn = tt_avdeb_dn + myRst.getFloat("valor1");
                tt_avdeb_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* avdeb/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avdeb_ch = tt_avdeb_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* avdeb/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avdeb_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* avdeb/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'av'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_avdeb_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* CAIXA ANTERIOR
        tt_caixa_dn = 0;
        tt_caixa_ch = 0;
        tt_caixa_cp = 0;
        tt_caixa_ct = 0;

        //* CAIXA/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_caixa_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* CAIXA CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_caixa_dn = tt_caixa_dn + myRst.getFloat("valor1");
                tt_caixa_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* caixa/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_caixa_ch = tt_caixa_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* caixa/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_caixa_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* caixa/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'cx'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_caixa_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* PASSAGEM DE CAIXA
        tt_pass_dn = 0;
        tt_pass_ch = 0;
        tt_pass_cp = 0;
        tt_pass_ct = 0;
        
        //* PASS/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "DN' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_pass_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* PASS CHEQUE/DINHEIRO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CD' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_pass_dn = tt_pass_dn + myRst.getFloat("valor1");
                tt_pass_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CHEQUE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CH' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_pass_ch = tt_pass_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CHEQUE-PRE
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CP' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_pass_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() + "' and cx_tipopg = '" + "CT' and cx_oper = 'CRE' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_pass_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* PASSAGEM DE CAIXA DEB
        tt_passd_dn = 0;
        tt_passd_ch = 0;
        tt_passd_cp = 0;
        tt_passd_ct = 0;
        
        //* PASS/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_passd_dn = 0 + myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* PASS CHEQUE/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_passd_dn = tt_passd_dn + myRst.getFloat("valor1");
                tt_passd_ch = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CHEQUE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_passd_ch = tt_passd_ch + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CHEQUE-PRE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_passd_cp = 0 + myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* pass/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'pc'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_passd_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* ADIANTAMENTO DEB
        tt_adi_dn = 0;
        tt_adi_ch = 0;
        tt_adi_cp = 0;
        tt_adi_ct = 0;
        
        //* ADI/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "DN' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ad'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_adi_dn += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* ADI CHEQUE/DINHEIRO DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CD' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ad'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_adi_dn += myRst.getFloat("valor1");
                tt_adi_ch += myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* adi/CHEQUE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CH' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ad'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_adi_ch += myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* ADI/CHEQUE-PRE DEB
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CP' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ad'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_adi_cp +=  myRst.getFloat("valor2");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        //* ADI/CARTAO
        sSql = "select sum(cx_vrdn) as valor1,sum(IF(IsNull(cx_vrch),0,cx_vrch)) as valor2, " +
                "sum(cx_vrdn) + sum(IF(IsNull(cx_vrch),0,cx_vrch)) as Total from caixa where lower(cx_logado) = '" +
                VariaveisGlobais.usuario.toLowerCase() +
                "' and cx_tipopg = '" + "CT' and cx_oper = 'DEB' and trim(lcase(cx_doc)) = 'ad'" +
                " AND cx_data <= '" + dDataCaixa + "';";
        myRst = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);
        try {
            while (myRst.next()) {
                tt_adi_ct += myRst.getFloat("valor1");
            }
        } catch (SQLException ex) {}
        DbMain.FecharTabela(myRst);

        return new float[][] {{tt_recibo_dn, tt_recibo_ch, tt_recibo_cp, tt_recibo_ct},
            {tt_extrato_dn, tt_extrato_ch, tt_extrato_cp, tt_extrato_ct},
            {tt_despesa_dn, tt_despesa_ch, tt_despesa_cp, tt_despesa_ct},
            {tt_deposito_dn, tt_deposito_ch, tt_deposito_cp, tt_deposito_ct},
            {tt_avcred_dn, tt_avcred_ch, tt_avcred_cp, tt_avcred_ct},
            {tt_avdeb_dn, tt_avdeb_ch, tt_avdeb_cp, tt_avdeb_ct},
            {tt_caixa_dn, tt_caixa_ch, tt_caixa_cp, tt_caixa_ct},
            {tt_pass_dn, tt_pass_ch, tt_pass_cp, tt_pass_ct},
            {tt_passd_dn, tt_passd_ch, tt_passd_cp, tt_passd_ct},
            {tt_adi_dn, tt_adi_ch, tt_adi_cp, tt_adi_ct}};
    }


    private void Fechar(Date dData) {
        Collections gVar = VariaveisGlobais.dCliente;
        ResultSet rs;
        //String sql = "SELECT * FROM caixa WHERE Lower(cx_logado) = 'fabiana' AND cx_data = '2011-06-22' ORDER BY Lower(cx_logado), cx_doc, cx_oper, cx_aut, cx_tipopg desc;";
        final String sql = "SELECT * FROM caixa WHERE Lower(cx_logado) = '&1.' AND cx_data = '&2.' AND cx_oper = '&3.' AND (cx_doc = '&4.' OR cx_doc = '&4.X') ORDER BY cx_aut, cx_tipopg desc;";
        //"SELECT * FROM caixabck WHERE Lower(cx_logado) = 'fabiana' AND cx_data = '2010-08-11' AND cx_oper = 'CRE' AND cx_doc LIKE 'AV%' ORDER BY cx_aut, cx_tipopg desc;"
        String sSql = "";

        float tt_apu_dn = 0;
        float tt_apu_ch = 0;
        float tt_apu_cp = 0;
        float m_Saldo = 0;

        String docName = "reports/Recibos/" + "CX_" + Dates.DateFormata("ddMMyyyy", dData) + "_" + Dates.DateFormata("HHmmss", dData) + "_" + VariaveisGlobais.usuario.trim().toLowerCase();
        PrinterPOS printer = new PrinterPOS(docName);
        printer.Print(JavaPOS.ESC_ARROBA + "", 1);
        //printer.setDocName(docName);

        // Imprime logomarca
        ///////printer.PrintBitMap("resources/logos/boleta/" + VariaveisGlobais.dCliente.get("marca").trim() + ".gif",0);
        /////////printer.Print("", 1);

        // cabeçário
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + gVar.get("empresa"), 1);
        printer.Print(JavaPOS.ESCLAMATION(65) + gVar.get("endereco") + ", " + gVar.get("numero") + " " + gVar.get("complemento"), 1);
        printer.Print(JavaPOS.ESCLAMATION(65) + gVar.get("bairro") + " - " + gVar.get("cidade") + " - " + gVar.get("estado") + " - " + gVar.get("cep"), 1);
        printer.Print(JavaPOS.ESCLAMATION(65) + "Tel/Fax:" + gVar.get("telefone") + JavaPOS.ESC_E(0), 1);
        printer.Print("", 1);

        printer.Print(JavaPOS.ESCLAMATION(70) + JavaPOS.ESC_A(1) + JavaPOS.REVERSO + "FECHAMENTO DE CAIXA" + JavaPOS.NORMAL, 1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "", 1);

        printer.Print(JavaPOS.ESCLAMATION(65) + "CAIXA DO DIA => " + JavaPOS.ESC_E(1) + Dates.DateFormata("dd/MM/yyyy", dData) + JavaPOS.ESC_E(0),1);
        printer.Print(JavaPOS.ESCLAMATION(65) + "CAIXA: " + new Pad(VariaveisGlobais.usuario,15).RPad() + "       Data/Hora: " + Dates.DateFormata("dd/MM/yyyy HH:mm", new Date()) ,1);

        printer.Print(JavaPOS.ESCLAMATION(65) + "========================================================",1);

        // RECIBOS
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "CRE", "RC"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        int tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "RECIBOS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        String[] linhas = {};
        float tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_contrato") +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // ADIANTAMENTO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "AD"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "ADIANTAMENTOS - DEBITO" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        //javaPOS.ESCLAMATION(65) + new Pad(rs.getString("cx_rgprp"),5).LPad() + (20-12-2011 17h06m
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_rgprp") +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // EXTRATO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "ET"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "EXTRATOS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        //javaPOS.ESCLAMATION(65) + new Pad(rs.getString("cx_rgprp"),5).LPad() + (20-12-2011 17h06m
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_rgprp") +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // AVISO DE CREDITO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "CRE", "AV"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "AVISOS - CREDITOS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // AVISO DE DEBITO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "AV"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "AVISOS - DEBITOS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // DESPESAS
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "DP"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "DESPESAS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // DEPOSITO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "DS"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "DEPOSITOS" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + "     " +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String dta = "          "; String bco = "   "; String age = "     "; String nch = "          ";
              String vrl = "";
              if ("DN".equals(rs.getString("cx_tipopg"))) {
                  vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrdn"), 2);
              } else {
                  vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrch"), 2);
              }

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              try {tdoc += LerValor.StringToFloat(vrl);} catch (Exception ex) {}
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // PASSAGEM DE CAIXA - CREDITO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "CRE", "PC"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "PASSAGEM CAIXA - CREDITO" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + "     " +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // PASSAGEM DE CAIXA - DEBITO
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "DEB", "PC"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "PASSAGEM CAIXA - DEBITO" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad(rs.getString("cx_aut"),6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + "     " +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        ") + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        // APURACAO DE CAIXA ANTERIOR - CREDITO
        final String sql2 = "SELECT * FROM caixa WHERE Lower(cx_logado) = '&1.' AND cx_data <= '&2.' AND cx_oper = '&3.' AND cx_doc LIKE '&4.%' ORDER BY cx_aut, cx_tipopg desc;";
        sSql = FuncoesGlobais.Subst(sql2, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "CRE", "CX"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        tam = DbMain.RecordCount(rs);
        if (tam > 0) {printer.Print(
                JavaPOS.ESCLAMATION(65) + JavaPOS.GS_EXC(16) + "CAIXA" + JavaPOS.GS_EXC(0),1);
                printer.Print(JavaPOS.ESCLAMATION(65) + "--------------------------------------------------------",1);
        }
        linhas = new String[] {};
        tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    linhas[0] += "         " + JavaPOS.ESC_E(1) +
                                 new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                                 JavaPOS.ESC_E(0);
                    // imprimi
                    for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
                    tdoc = 0;  linhas = new String[] {};
                }
                linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + JavaPOS.ESC_E(1) +
                        JavaPOS.ESC_R(1) + new Pad("$$$$$",6).RPad() +
                        JavaPOS.ESC_R(0) +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(0) + "  " +
                        JavaPOS.ESCLAMATION(65) + rs.getString("cx_hora") +
                        JavaPOS.ESCLAMATION(65) + "  " +
                        JavaPOS.ESCLAMATION(65) + "     " +
                        JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_E(1) + "        " + JavaPOS.ESC_E(0));

                oldCx = rs.getString("cx_aut");
              }

              String dta = "          "; String bco = "   "; String age = "     "; String nch = "          ";
              String vrl = "";
              if ("DN".equals(rs.getString("cx_tipopg"))) {
                  vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrdn"), 2);
              } else {
                  vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrch"), 2);
              }

              linhas = FuncoesGlobais.ArrayAdd(linhas, JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "       " +
                      JavaPOS.ESCLAMATION(65) +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg").replaceAll("CT", "BC"));

              try {tdoc += LerValor.StringToFloat(vrl);} catch (Exception ex) {}
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            linhas[0] += "         " + JavaPOS.ESC_E(1) +
                         new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad() +
                         JavaPOS.ESC_E(0);
            // imprimi
            for (int i=0;i<linhas.length;i++) {printer.Print(JavaPOS.ESCLAMATION(65) + linhas[i], 1);}
            tdoc = 0;  linhas = new String[] {};
        }

        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + "",1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + JavaPOS.GS_EXC(16) +
                          "RESUMO DO FECHAMENTO" + JavaPOS.GS_EXC(0),1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + "",1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + "DSC |  DINHEIRO  |   CHEQUE   | PRE-DATADO |   BANCOS   ",1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + "--------------------------------------------------------",1);

        ////// >>>>>>>>>>>>>>>>
        float[][] m_Totais = Totaliza(Dates.DateFormata("yyyy-MM-dd", dData));
        String tmpString = "";

        if (m_Totais[0][0] + m_Totais[0][1] + m_Totais[0][2] + m_Totais[0][3] > 0) {
          tmpString = "REC " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][0] + m_Totais[0][1] + m_Totais[0][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[1][0] + m_Totais[1][1] + m_Totais[1][2] + m_Totais[1][3] > 0) {
          tmpString = "EXT " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][0] + m_Totais[1][1] + m_Totais[1][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[9][0] + m_Totais[9][1] + m_Totais[9][2] + m_Totais[9][3] > 0) {
          tmpString = "ADI " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][0] + m_Totais[9][1] + m_Totais[9][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }            

        if (m_Totais[4][0] + m_Totais[4][1] + m_Totais[4][2] + m_Totais[4][3] > 0) {
          tmpString = "AVC " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][0] + m_Totais[4][1] + m_Totais[4][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[5][0] + m_Totais[5][1] + m_Totais[5][2] + m_Totais[5][3] > 0) {
          tmpString = "AVD " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][0] + m_Totais[5][1] + m_Totais[5][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[2][0] + m_Totais[2][1] + m_Totais[2][2] + m_Totais[2][3] > 0) {
          tmpString = "DES " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][0] + m_Totais[2][1] + m_Totais[2][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[3][0] + m_Totais[3][1] + m_Totais[3][2] + m_Totais[3][3] > 0) {
          tmpString = "DEP " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][0] + m_Totais[3][1] + m_Totais[3][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[7][0] + m_Totais[7][1] + m_Totais[7][2] + m_Totais[7][3] > 0) {
          tmpString = "PCC " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][0] + m_Totais[7][1] + m_Totais[7][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[8][0] + m_Totais[8][1] + m_Totais[8][2] + m_Totais[8][3] > 0) {
          tmpString = "PCD " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][0] + m_Totais[8][1] + m_Totais[8][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        if (m_Totais[6][0] + m_Totais[6][1] + m_Totais[6][2] + m_Totais[6][3] > 0) {
          tmpString = "CAX " + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][0],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][1],2),10).LPad() + "   ";
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][2],2),10).LPad() + "   ";
          //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][0] + m_Totais[6][1] + m_Totais[6][2],2),10).LPad();
          tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][3],2),10).LPad();
          printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);
        }

        tt_apu_dn = LerValor.StringToFloat(jVRDN.getText());
        tt_apu_ch = LerValor.StringToFloat(jVRCH.getText());
        tt_apu_cp = LerValor.StringToFloat(jVRCP.getText());

        tmpString = "ACX " + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_apu_dn,2),10).LPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_apu_ch,2),10).LPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_apu_cp,2),10).LPad() + "   ";
        //tmpString += new Pad(LerValor.floatToCurrency(tt_apu_dn + tt_apu_ch + tt_apu_cp,2),10).LPad();
        tmpString += new Pad(LerValor.floatToCurrency(0,2),10).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + tmpString,1);

        float tt_etd_dn = m_Totais[4][0] + m_Totais[0][0] + m_Totais[6][0] + m_Totais[7][0];
        float tt_etd_ch = m_Totais[4][1] + m_Totais[0][1] + m_Totais[6][1] + m_Totais[7][1];
        float tt_etd_cp = m_Totais[4][2] + m_Totais[0][2] + m_Totais[6][2] + m_Totais[7][2];
        float tt_etd_ct = m_Totais[0][3] + m_Totais[4][3];

        float tt_eta_dn = m_Totais[5][0] + m_Totais[3][0] + m_Totais[2][0] + m_Totais[1][0] + m_Totais[8][0] + m_Totais[9][0];
        float tt_eta_ch = m_Totais[3][1] + m_Totais[8][1];
        float tt_eta_cp = m_Totais[5][2] + m_Totais[3][2] + m_Totais[2][2] + m_Totais[1][2] + m_Totais[8][2];
        float tt_eta_ct = 0;

        /////////////////////////////////////////
        printer.Print(JavaPOS.ESCLAMATION(65) + "", 1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + JavaPOS.GS_EXC(16) +
                          "RESULTADO FINAL" + JavaPOS.GS_EXC(0),1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(1) + "",1);

        tmpString = new Pad("TOTAL DINHEIRO", 16).RPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_etd_dn - tt_eta_dn - tt_apu_dn,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        tmpString = new Pad("TOTAL CHEQUE", 16).RPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_etd_ch - tt_eta_ch - tt_apu_ch,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        tmpString = new Pad("TOTAL PRE-DATADO", 16).RPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_etd_cp - tt_eta_cp - tt_apu_cp,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        tmpString = new Pad("TOTAL BANCOS", 16).RPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(tt_etd_ct - tt_eta_ct - 0,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "",1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) + "",1);

        float ntt_entradas = tt_etd_dn + tt_etd_ch + tt_etd_cp;
        float ntt_saidas = tt_eta_ch + tt_eta_dn + tt_eta_cp + tt_apu_dn + tt_apu_ch + tt_apu_cp;
        //'float ntr_saidas = tt_eta_ch + tt_eta_dn + tt_eta_cp;

        tmpString = new Pad("TOTAL ENTRADAS", 16).RPad() + "   ";
        tmpString += new Pad(LerValor.floatToCurrency(ntt_entradas,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        tmpString = new Pad("TOTAL SAIDAS", 16).RPad() + "   ";
        //'PutPrinter RValor((tt_eta_ch + tt_eta_dn + m_Totais(3)(1) + m_Totais(3)(2)) + tt_apu_dn + tt_apu_ch + tt_apu_cp), , 1
        tmpString += new Pad(LerValor.floatToCurrency(ntt_saidas,2),15).LPad();
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  "----------------------------------",1);
        ////////////////////////////////

        m_Saldo = ntt_entradas - ntt_saidas;
        tmpString = new Pad("SALDO", 16).RPad() + "   " + new Pad(LerValor.floatToCurrency(m_Saldo,2),15).LPad() + "   ";

        if (m_Saldo < 0) {
          tmpString += "SOBRA DE CAIXA";
        } else if (m_Saldo > 0) {
          tmpString += "FALTA DE CAIXA";
        } else {
          tmpString += "CAIXA OK!?";
        }
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  tmpString,1);

        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  "",1);
        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  "",1);

        printer.Print(JavaPOS.ESCLAMATION(65) + JavaPOS.ESC_A(0) +  "OBSERVACOES DO CAIXA:",1);

        // Pula linhas (6) / corta papel
        for (int k=1;k<=15;k++) { printer.Print(JavaPOS.ESCLAMATION(65) + "", 1); }

        // Cortar o papel
        printer.Print(JavaPOS.FULLCUT, 1);

        //printer.Close();
        new toPrint(docName, VariaveisGlobais.Caixa.split(",")[0],VariaveisGlobais.Caixa.split(",")[1],VariaveisGlobais.Caixa.split(",")[2]);
        printer.setDocName("");

        String sExecuteSql = "";
        //* Backup caixa
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixabck (SELECT * FROM caixa WHERE lower(cx_logado) = '" + VariaveisGlobais.usuario.toLowerCase().trim() + "' AND cx_data <= '&1.');", new String[] {Dates.DateFormata("yyyy-MM-dd", dData)});
        conn.ExecutarComando(sExecuteSql);

        //* Deleta o caixa
        sExecuteSql = FuncoesGlobais.Subst("DELETE FROM caixa WHERE lower(cx_logado) = '" + VariaveisGlobais.usuario.toLowerCase().trim() + "' AND cx_data <= '&1.';", new String[] {Dates.DateFormata("yyyy-MM-dd", dData)});
        conn.ExecutarComando(sExecuteSql);

        //* Grava o caixa (fechamento)
        //; DINHEIRO
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    String.valueOf(tt_apu_dn),
                    "0",
                    "DN",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; CHEQUE
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    "0",
                    String.valueOf(tt_apu_ch),
                    "CH",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; CHEQUE PRE
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    "0",
                    String.valueOf(tt_apu_cp),
                    "CP",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; manda para razao
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO razao (rgprp, campo, dtvencimento, dtrecebimento, tag) VALUES ('CX','AV:9:&1.:000000:AV:ET:&2._05CX:&3.:&4.:&5.:&6.:&7.','&8.','&9.','&10.')", new String[] {
                      FuncoesGlobais.GravaValor(LerValor.floatToCurrency(m_Saldo, 2)),
                      "000000",
                      Dates.DateFormata("yyyy-MM-dd", new Date()),
                      (m_Saldo < 0 ? "DEB" : "CRE"),
                      "XX",
                      FuncoesGlobais.CriptaNome("FECHAMENTO DE CAIXA"),
                      VariaveisGlobais.usuario.toLowerCase().trim(),
                      Dates.DateFormata("yyyy/MM/dd", new Date()),
                      Dates.DateFormata("yyyy/MM/dd", new Date())," "}).replace("_", "");
        conn.ExecutarComando(sExecuteSql);

        //; grava no auxiliar
        try {conn.CreateArqAux();} catch (Exception ex) {}
        String sVar = "CX:9:" + FuncoesGlobais.GravaValor(LerValor.floatToCurrency(m_Saldo,2)) + ":000000:CX:0000000000:" + Dates.DateFormata("ddMMyyyy", new Date()) + ":" + (m_Saldo >= 0 ? "CRE" : "DEB") + ":" + FuncoesGlobais.CriptaNome("FECHAMENTO DE CAIXA") + ":" + VariaveisGlobais.usuario.toLowerCase().trim();
        String tmpTexto = "INSERT INTO auxiliar (conta, contrato, campo, dtvencimento, dtrecebimento, rc_aut) VALUES ('&1.','&2.','&3.','&4.','&5.','&6.');";
        tmpTexto = FuncoesGlobais.Subst(tmpTexto, new String[] {
                   "CXA",
                   "",
                   sVar,
                   Dates.DateFormata("yyyy-MM-dd", dData),
                   Dates.DateFormata("yyyy/MM/dd", new Date()),
                   "0"});
        conn.ExecutarComando(tmpTexto);

        this.dispose();
    }            

    private void Fechar_new(Date dData) {
        Object[][] linhas = {};
        jThermica Printer = new jThermica(linhas);

        Collections gVar = VariaveisGlobais.dCliente;
        ResultSet rs;
        final String sql = "SELECT * FROM caixa WHERE Lower(cx_logado) = '&1.' AND cx_data = '&2.' AND cx_oper = '&3.' AND (cx_doc = '&4.' OR cx_doc = '&4.X') ORDER BY cx_aut, cx_tipopg desc;";
        String sSql = "";

        float tt_apu_dn = 0;
        float tt_apu_ch = 0;
        float tt_apu_cp = 0;
        float m_Saldo = 0;

        // cabeçário
        Object[][] tmp = {
                                {gVar.get("empresa"),null,0,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.BLACK, Color.WHITE}
                            };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {gVar.get("endereco") + ", " + gVar.get("numero") + " " + gVar.get("complemento"),null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                               };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {gVar.get("bairro") + " - " + gVar.get("cidade") + " - " + gVar.get("estado") + " - " + gVar.get("cep"),null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                             };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {"Tel/Fax:" + gVar.get("telefone"),null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                             };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                             };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {"FECHAMENTO DE CAIXA",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN + java.awt.Font.ITALIC,10), Color.WHITE, Color.BLACK}
                             };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                                {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                             };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                            {"CAIXA: " + VariaveisGlobais.usuario,80,1,new java.awt.Font("Times New Roman",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE},
                            {"Data/Hora: " + Dates.DateFormata("dd/MM/yyyy HH:mm", new Date()),null,2,new java.awt.Font("Times New Roman",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                         };
        linhas =  Printer.adcLine(linhas, tmp);

        tmp = new Object[][] {
                            {null,null,2,null, Color.BLACK, Color.WHITE},
                         };
        linhas =  Printer.adcLine(linhas, tmp);
        

        // RECIBOS
        sSql = FuncoesGlobais.Subst(sql, new String[] {
             VariaveisGlobais.usuario.toLowerCase().trim(),
             Dates.DateFormata("yyyy-MM-dd", dData),
             "CRE", "RC"});
        rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

        int tam = DbMain.RecordCount(rs);
        if (tam > 0) {
            tmp = new Object[][] {
                                    {"RECIBOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);
        }
        String[] nlinhas = {};
        float tdoc = 0;
        try {
          String oldCx = "";
          while (rs.next()) {
              if (!oldCx.equals(rs.getString("cx_aut"))) {
                if (tdoc > 0) {
                    nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                    // imprimi
                    for (int i=0;i<nlinhas.length;i++) {
                        tmp = new Object[][] {
                                                {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                             };
                        linhas =  Printer.adcLine(linhas, tmp);
                    }
                    tdoc = 0;  nlinhas = new String[] {};
                }
                nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, 
                        new Pad(rs.getString("cx_aut"),5).RPad() +
                        "  " + rs.getString("cx_hora") +
                        "  " + rs.getString("cx_contrato") +
                        (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                oldCx = rs.getString("cx_aut");
              }

              String lnh = rs.getString("cx_chrel").toUpperCase().trim();
              String[] pval = PegaValor(lnh);
              String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

              nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
               dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                      " " + rs.getString("cx_tipopg"));

              tdoc += LerValor.StringToFloat(vrl);
          }
        } catch (SQLException ex) {ex.printStackTrace();}
        DbMain.FecharTabela(rs);

        // Finaliza impressao
        if (tdoc > 0) {
            nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
            // imprimi
            for (int i=0;i<nlinhas.length;i++) {
                tmp = new Object[][] {
                                        {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            tdoc = 0;  nlinhas = new String[] {};

            tmp = new Object[][] {
                                    {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);            
        }

            // ADIANTAMENTO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "AD"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"ADIANTAMENTOS - DEBITOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " +
                            //javaPOS.ESCLAMATION(65) + new Pad(rs.getString("cx_rgprp"),5).LPad() + (20-12-2011 17h06m
                            rs.getString("cx_rgprp") + (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                      dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                    tmp = new Object[][] {
                                            {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                         };
                    linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // EXTRATO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "ET"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"EXTRATOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " +
                            //javaPOS.ESCLAMATION(65) + new Pad(rs.getString("cx_rgprp"),5).LPad() + (20-12-2011 17h06m
                            rs.getString("cx_rgprp") +(rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                    tmp = new Object[][] {
                                            {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                         };
                    linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // AVISO DE CREDITO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "CRE", "AV"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"AVISOS - CREDITOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " +
                            new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                    tmp = new Object[][] {
                                            {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                         };
                    linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // AVISO DE DEBITO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "AV"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"AVISOS - DEBITOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " +
                            new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                    tmp = new Object[][] {
                                            {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                         };
                    linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // DESPESAS
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "DP"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"DESPESAS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " +
                            new Pad((!"".equals(rs.getString("cx_rgprp").trim()) ? rs.getString("cx_rgprp") : rs.getString("cx_contrato")),5).RPad() +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                          dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // DEPOSITO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "DS"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"DEPOSITOS                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " + "     " +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String dta = "          "; String bco = "   "; String age = "     "; String nch = "          ";
                  String vrl = "";
                  if ("DN".equals(rs.getString("cx_tipopg"))) {
                      vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrdn"), 2);
                  } else {
                      vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrch"), 2);
                  }

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  try {tdoc += LerValor.StringToFloat(vrl);} catch (Exception ex) {}
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // PASSAGEM DE CAIXA - CREDITO
        nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "CRE", "PC"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"PASSAGEM CAIXA - CREDITO                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() + "  " +
                            rs.getString("cx_hora") + "  " + "     " +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            // PASSAGEM DE CAIXA - DEBITO
            nlinhas = new String[] {};
            sSql = FuncoesGlobais.Subst(sql, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "DEB", "PC"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"PASSAGEM CAIXA - DEBITO",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad(rs.getString("cx_aut"),5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " + "     " +
                            (rs.getString("cx_doc").contains("X") ? " EXTORNO" : "        "));

                    oldCx = rs.getString("cx_aut");
                  }

                  String lnh = rs.getString("cx_chrel").toUpperCase().trim();
                  String[] pval = PegaValor(lnh);
                  String dta = pval[0], bco = pval[1], age = pval[2], nch = pval[3], vrl = pval[4];

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  tdoc += LerValor.StringToFloat(vrl);
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            
            // APURACAO DE CAIXA ANTERIOR - CREDITO
        nlinhas = new String[] {};
            final String sql2 = "SELECT * FROM caixa WHERE Lower(cx_logado) = '&1.' AND cx_data <= '&2.' AND cx_oper = '&3.' AND cx_doc LIKE '&4.%' ORDER BY cx_aut, cx_tipopg desc;";
            sSql = FuncoesGlobais.Subst(sql2, new String[] {
                 VariaveisGlobais.usuario.toLowerCase().trim(),
                 Dates.DateFormata("yyyy-MM-dd", dData),
                 "CRE", "CX"});
            rs = conn.AbrirTabela(sSql, ResultSet.CONCUR_READ_ONLY);

            tam = DbMain.RecordCount(rs);
            if (tam > 0) {
                tmp = new Object[][] {
                                        {"CAIXA                                                                                ",null,1,new java.awt.Font("Arial",java.awt.Font.BOLD + java.awt.Font.ITALIC,9), Color.WHITE, Color.BLACK}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }
            nlinhas = new String[] {};
            tdoc = 0;
            try {
              String oldCx = "";
              while (rs.next()) {
                  if (!oldCx.equals(rs.getString("cx_aut"))) {
                    if (tdoc > 0) {
                        nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                        // imprimi
                        for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                        }
                        tdoc = 0;  nlinhas = new String[] {};
                    }
                    nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, new Pad("$$$$$",5).RPad() +
                            "  " + rs.getString("cx_hora") + "  " + "     " +
                            "        ");

                    oldCx = rs.getString("cx_aut");
                  }

                  String dta = "          "; String bco = "   "; String age = "     "; String nch = "          ";
                  String vrl = "";
                  if ("DN".equals(rs.getString("cx_tipopg"))) {
                      vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrdn"), 2);
                  } else {
                      vrl = LerValor.floatToCurrency(rs.getFloat("cx_vrch"), 2);
                  }

                  nlinhas = FuncoesGlobais.ArrayAdd(nlinhas, "       " +
                   dta + " " + bco + " " + age + " " + nch + " " + new Pad(vrl,14).LPad() +
                          " " + rs.getString("cx_tipopg"));

                  try {tdoc += LerValor.StringToFloat(vrl);} catch (Exception ex) {}
              }
            } catch (SQLException ex) {ex.printStackTrace();}
            DbMain.FecharTabela(rs);

            // Finaliza impressao
            if (tdoc > 0) {
                nlinhas[0] += "         " + new Pad(LerValor.floatToCurrency(tdoc, 2),14).LPad();
                // imprimi
                for (int i=0;i<nlinhas.length;i++) {
                            tmp = new Object[][] {
                                                    {nlinhas[i],null,2,new java.awt.Font("Arial",java.awt.Font.PLAIN,7), Color.BLACK, Color.WHITE}
                                                 };
                            linhas =  Printer.adcLine(linhas, tmp);
                }
                tdoc = 0;  nlinhas = new String[] {};

                tmp = new Object[][] {
                                        {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                     };
                linhas =  Printer.adcLine(linhas, tmp);
            }

            nlinhas = new String[] {};
            tmp = new Object[][] {
                                    {"RESUMO DO FECHAMENTO",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN + java.awt.Font.ITALIC,10), Color.WHITE, Color.BLACK}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"DSC |  DINHEIRO  |   CHEQUE   | PRE-DATADO |   BANCOS   ",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.WHITE, Color.BLACK}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);


            ////// >>>>>>>>>>>>>>>>
            float[][] m_Totais = Totaliza(Dates.DateFormata("yyyy-MM-dd", dData));
            String tmpString = "";

            if (m_Totais[0][0] + m_Totais[0][1] + m_Totais[0][2] + m_Totais[0][3] > 0) {
              tmpString = "REC " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][0] + m_Totais[0][1] + m_Totais[0][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[0][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[1][0] + m_Totais[1][1] + m_Totais[1][2] + m_Totais[1][3] > 0) {
              tmpString = "EXT " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][0] + m_Totais[1][1] + m_Totais[1][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[1][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[9][0] + m_Totais[9][1] + m_Totais[9][2] + m_Totais[9][3] > 0) {
              tmpString = "ADI " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][0] + m_Totais[9][1] + m_Totais[9][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[9][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }            
            
            if (m_Totais[4][0] + m_Totais[4][1] + m_Totais[4][2] + m_Totais[4][3] > 0) {
              tmpString = "AVC " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][0] + m_Totais[4][1] + m_Totais[4][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[4][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[5][0] + m_Totais[5][1] + m_Totais[5][2] + m_Totais[5][3] > 0) {
              tmpString = "AVD " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][0] + m_Totais[5][1] + m_Totais[5][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[5][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[2][0] + m_Totais[2][1] + m_Totais[2][2] + m_Totais[2][3] > 0) {
              tmpString = "DES " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][0] + m_Totais[2][1] + m_Totais[2][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[2][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[3][0] + m_Totais[3][1] + m_Totais[3][2] + m_Totais[3][3] > 0) {
              tmpString = "DEP " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][0] + m_Totais[3][1] + m_Totais[3][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[3][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[7][0] + m_Totais[7][1] + m_Totais[7][2] + m_Totais[7][3] > 0) {
              tmpString = "PCC " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][0] + m_Totais[7][1] + m_Totais[7][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[7][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[8][0] + m_Totais[8][1] + m_Totais[8][2] + m_Totais[8][3] > 0) {
              tmpString = "PCD " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][0] + m_Totais[8][1] + m_Totais[8][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[8][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            if (m_Totais[6][0] + m_Totais[6][1] + m_Totais[6][2] + m_Totais[6][3] > 0) {
              tmpString = "CAX " + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][0],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][1],2),10).LPad() + "   ";
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][2],2),10).LPad() + "   ";
              //tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][0] + m_Totais[6][1] + m_Totais[6][2],2),10).LPad();
              tmpString += new Pad(LerValor.floatToCurrency(m_Totais[6][3],2),10).LPad();
              tmp = new Object[][] {
                                      {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                   };
              linhas =  Printer.adcLine(linhas, tmp);
            }

            tt_apu_dn = LerValor.StringToFloat(jVRDN.getText());
            tt_apu_ch = LerValor.StringToFloat(jVRCH.getText());
            tt_apu_cp = LerValor.StringToFloat(jVRCP.getText());
            
            tmpString = "ACX " + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_apu_dn,2),10).LPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_apu_ch,2),10).LPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_apu_cp,2),10).LPad() + "   ";
            //tmpString += new Pad(LerValor.floatToCurrency(tt_apu_dn + tt_apu_ch + tt_apu_cp,2),10).LPad();
            tmpString += new Pad(LerValor.floatToCurrency(0,2),10).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,6), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            float tt_etd_dn = m_Totais[4][0] + m_Totais[0][0] + m_Totais[6][0] + m_Totais[7][0];
            float tt_etd_ch = m_Totais[4][1] + m_Totais[0][1] + m_Totais[6][1] + m_Totais[7][1];
            float tt_etd_cp = m_Totais[4][2] + m_Totais[0][2] + m_Totais[6][2] + m_Totais[7][2];
            float tt_etd_ct = m_Totais[0][3] + m_Totais[4][3];
            
            float tt_eta_dn = m_Totais[5][0] + m_Totais[3][0] + m_Totais[2][0] + m_Totais[1][0] + m_Totais[8][0] + m_Totais[9][0];
            float tt_eta_ch = m_Totais[3][1] + m_Totais[8][1];
            float tt_eta_cp = m_Totais[5][2] + m_Totais[3][2] + m_Totais[2][2] + m_Totais[1][2] + m_Totais[8][2];
            float tt_eta_ct = 0;
                        
            tmp = new Object[][] {
                                    {"",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"RESULTADO FINAL",null,0,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,9), Color.WHITE, Color.BLACK}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmpString = new Pad("TOTAL DINHEIRO", 16).RPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_etd_dn - tt_eta_dn - tt_apu_dn,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmpString = new Pad("TOTAL CHEQUE", 16).RPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_etd_ch - tt_eta_ch - tt_apu_ch,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmpString = new Pad("TOTAL PRE-DATADO", 16).RPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_etd_cp - tt_eta_cp - tt_apu_cp,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmpString = new Pad("TOTAL BANCOS", 16).RPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(tt_etd_ct - tt_eta_ct - 0,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            float ntt_entradas = tt_etd_dn + tt_etd_ch + tt_etd_cp;
            float ntt_saidas = tt_eta_ch + tt_eta_dn + tt_eta_cp + tt_apu_dn + tt_apu_ch + tt_apu_cp;
            //'float ntr_saidas = tt_eta_ch + tt_eta_dn + tt_eta_cp;

            tmpString = new Pad("TOTAL ENTRADAS", 16).RPad() + "   ";
            tmpString += new Pad(LerValor.floatToCurrency(ntt_entradas,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmpString = new Pad("TOTAL SAIDAS", 16).RPad() + "   ";
            //'PutPrinter RValor((tt_eta_ch + tt_eta_dn + m_Totais(3)(1) + m_Totais(3)(2)) + tt_apu_dn + tt_apu_ch + tt_apu_cp), , 1
            tmpString += new Pad(LerValor.floatToCurrency(ntt_saidas,2),15).LPad();
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);
            tmp = new Object[][] {
                                    {null,null,0,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);
            
            m_Saldo = ntt_entradas - ntt_saidas;
            tmpString = new Pad("SALDO", 16).RPad() + "   " + new Pad(LerValor.floatToCurrency(m_Saldo,2),15).LPad() + "   ";

            if (m_Saldo < 0) {
              tmpString += "SOBRA DE CAIXA";
            } else if (m_Saldo > 0) {
              tmpString += "FALTA DE CAIXA";
            } else {
              tmpString += "CAIXA OK!?";
            }
            tmp = new Object[][] {
                                    {tmpString,null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            tmp = new Object[][] {
                                    {"OBSERVACOES DO CAIXA",null,0,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,10), Color.WHITE, Color.BLACK}
                                 };
            linhas =  Printer.adcLine(linhas, tmp);

            for (int k=1;k<=6;k++) { 
                tmp = new Object[][] {
                                        {".",null,1,new java.awt.Font("Courier 10 Pitch",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                    };
                linhas =  Printer.adcLine(linhas, tmp);
            }

        String docID = ".smc";
        String docName = "reports/Recibos/" + "CX_" + Dates.DateFormata("dd-MM-yyyy", new Date()) + docID;

        jThermica np = new jThermica(linhas);
        np.setDocName(docName);
        np.toSave();
//        np.toPrint();
        np.setDocName("");
            
        String sExecuteSql = "";
        //* Backup caixa
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixabck (SELECT * FROM caixa WHERE lower(cx_logado) = '" + VariaveisGlobais.usuario.toLowerCase().trim() + "' AND cx_data <= '&1.');", new String[] {Dates.DateFormata("yyyy-MM-dd", dData)});
        conn.ExecutarComando(sExecuteSql);

        //* Deleta o caixa
        sExecuteSql = FuncoesGlobais.Subst("DELETE FROM caixa WHERE lower(cx_logado) = '" + VariaveisGlobais.usuario.toLowerCase().trim() + "' AND cx_data <= '&1.';", new String[] {Dates.DateFormata("yyyy-MM-dd", dData)});
        conn.ExecutarComando(sExecuteSql);

        //* Grava o caixa (fechamento)
        //; DINHEIRO
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    String.valueOf(tt_apu_dn),
                    "0",
                    "DN",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; CHEQUE
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    "0",
                    String.valueOf(tt_apu_ch),
                    "CH",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; CHEQUE PRE
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO caixa (cx_data, cx_hora, cx_doc, cx_vrdn, cx_vrch, cx_tipopg, cx_oper, cx_logado, cx_aut) " +
                    "VALUES ('&1.','&2.','&3.','&4.','&5.','&6.','&7.','&8.','&9.')", new String[] {
                    "0000-00-00 00:00:00",
                    Dates.DateFormata("HH:MM:ss", new Date()),
                    "CX",
                    "0",
                    String.valueOf(tt_apu_cp),
                    "CP",
                    "CRE",
                    VariaveisGlobais.usuario.toLowerCase().trim(), "0"});
        conn.ExecutarComando(sExecuteSql);

        //; manda para razao
        sExecuteSql = FuncoesGlobais.Subst("INSERT INTO razao (rgprp, campo, dtvencimento, dtrecebimento, tag) VALUES ('CX','AV:9:&1.:000000:AV:ET:&2._05CX:&3.:&4.:&5.:&6.:&7.','&8.','&9.','&10.')", new String[] {
                      FuncoesGlobais.GravaValor(LerValor.floatToCurrency(m_Saldo, 2)),
                      "000000",
                      Dates.DateFormata("yyyy-MM-dd", new Date()),
                      (m_Saldo < 0 ? "DEB" : "CRE"),
                      "XX",
                      FuncoesGlobais.CriptaNome("FECHAMENTO DE CAIXA"),
                      VariaveisGlobais.usuario.toLowerCase().trim(),
                      Dates.DateFormata("yyyy/MM/dd", new Date()),
                      Dates.DateFormata("yyyy/MM/dd", new Date())," "}).replace("_", "");
        conn.ExecutarComando(sExecuteSql);

        //; grava no auxiliar
        try {conn.CreateArqAux();} catch (Exception ex) {}
        String sVar = "CX:9:" + FuncoesGlobais.GravaValor(LerValor.floatToCurrency(m_Saldo,2)) + ":000000:CX:0000000000:" + Dates.DateFormata("ddMMyyyy", new Date()) + ":" + (m_Saldo >= 0 ? "CRE" : "DEB") + ":" + FuncoesGlobais.CriptaNome("FECHAMENTO DE CAIXA") + ":" + VariaveisGlobais.usuario.toLowerCase().trim();
        String tmpTexto = "INSERT INTO auxiliar (conta, contrato, campo, dtvencimento, dtrecebimento, rc_aut) VALUES ('&1.','&2.','&3.','&4.','&5.','&6.');";
        tmpTexto = FuncoesGlobais.Subst(tmpTexto, new String[] {
                   "CXA",
                   "",
                   sVar,
                   Dates.DateFormata("yyyy-MM-dd", dData),
                   Dates.DateFormata("yyyy/MM/dd", new Date()),
                   "0"});
        conn.ExecutarComando(tmpTexto);

        // Pula linhas (6) / corta papel
        for (int k=1;k<=6;k++) { 
            tmp = new Object[][] {
                                    {"",null,0,new java.awt.Font("Arial",java.awt.Font.PLAIN,8), Color.BLACK, Color.WHITE}
                                };
            linhas =  Printer.adcLine(linhas, tmp);
        }
        
        this.dispose();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList jCaixas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JFormattedTextField jVRCH;
    private javax.swing.JFormattedTextField jVRCP;
    private javax.swing.JFormattedTextField jVRCT;
    private javax.swing.JFormattedTextField jVRDN;
    private javax.swing.JButton jbtnFechar;
    private javax.swing.JButton jbtnSair;
    // End of variables declaration//GEN-END:variables
}
